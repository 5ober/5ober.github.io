<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blankの博客</title>
  
  <subtitle>Keep theme quick starter</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-05T11:15:21.052Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Blank</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Deepin和UOS系统远程ssh配置</title>
    <link href="http://example.com/2023/04/05/Deepin%E5%92%8CUOS%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8Bssh%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/04/05/Deepin%E5%92%8CUOS%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8Bssh%E9%85%8D%E7%BD%AE/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-05T11:15:21.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Deepin和UOS系统远程ssh配置"><a href="#Deepin和UOS系统远程ssh配置" class="headerlink" title="Deepin和UOS系统远程ssh配置"></a>Deepin和UOS系统远程ssh配置</h2><p>UOS系统安装后，默认是无法远程使用ssh远程登陆服务器的，本文介绍使用ssh远程登陆服务器的安装及配置方式。</p><p>一、检查系统是否安装的有ssh服务，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep ssh</span><br></pre></td></tr></table></figure><p>如无任何输出信息，则表示没有安装或者启用ssh服务。</p><p>二、如果没有ssh安装openssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server –y</span><br></pre></td></tr></table></figure><p>三、启动ssh服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh start</span><br></pre></td></tr></table></figure><p>四、验证ssh服务是否开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep ssh</span><br></pre></td></tr></table></figure><p>五、使用ssh连接服务器</p><p>1、查看服务器ip地址，命令：ifconfig</p><p>2、使用本地电脑远程ssh客户端连接服务器</p><p>这时需要修改ssh配置文件（文件路径：&#x2F;etc&#x2F;ssh&#x2F;sshd_config），修改方式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>打开文件后一直往下拉，找到如下图所示位置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LoginGraceTime 2m</span><br><span class="line"></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure><p>修改完成后保存退出，然后重启ssh服务，重启ssh服务命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><p>重启后即可使用ssh客户端登陆服务器了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Deepin和UOS系统远程ssh配置&quot;&gt;&lt;a href=&quot;#Deepin和UOS系统远程ssh配置&quot; class=&quot;headerlink&quot; title=&quot;Deepin和UOS系统远程ssh配置&quot;&gt;&lt;/a&gt;Deepin和UOS系统远程ssh配置&lt;/h2&gt;&lt;p&gt;UO</summary>
      
    
    
    
    <category term="linux远程ssh配置" scheme="http://example.com/categories/linux%E8%BF%9C%E7%A8%8Bssh%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="linux远程ssh配置" scheme="http://example.com/tags/linux%E8%BF%9C%E7%A8%8Bssh%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD ee 用法及网络配置</title>
    <link href="http://example.com/2023/04/05/FreeBSD%20ee%20%E7%94%A8%E6%B3%95%E5%8F%8A%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/04/05/FreeBSD%20ee%20%E7%94%A8%E6%B3%95%E5%8F%8A%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:40:58.457Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FreeBSD-ee-用法及网络配置"><a href="#FreeBSD-ee-用法及网络配置" class="headerlink" title="FreeBSD ee 用法及网络配置"></a>FreeBSD ee 用法及网络配置</h2><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="ee-用法"><a href="#ee-用法" class="headerlink" title="ee 用法"></a>ee 用法</h3><p>ee 的用法比 nano 还要简单许多。是 FreeBSD 基本系统自带的文本编辑器。</p><p>比如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee a.txt</span><br></pre></td></tr></table></figure><p>按 ESC 键，会显示提示框，按两次回车即可保存。</p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>先 <code>ifconfig</code> 看看有没有网卡，没有那就不属于本节的范围之内了。请注意 <code>lo0</code> 并不是真实网卡，如果你只能看到这个说明你网卡没有被正确驱动。</p><p>示例输出：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@ykla:~ # ifconfig</span><br><span class="line">genet0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; metric 0 mtu 1500</span><br><span class="line">options=68000b&lt;RXCSUM,TXCSUM,VLAN_MTU,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6&gt;</span><br><span class="line">ether dc:a6:1a:2e:f4:4t</span><br><span class="line">inet 192.168.123.157 netmask 0xffffff00 broadcast 192.168.123.255</span><br><span class="line">media: Ethernet autoselect (1000baseT &lt;full-duplex&gt;)</span><br><span class="line">status: active</span><br><span class="line">nd6 options=29&lt;PERFORMNUD,IFDISABLED,AUTO_LINKLOCAL&gt;</span><br><span class="line">lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; metric 0 mtu 16384</span><br><span class="line">options=680003&lt;RXCSUM,TXCSUM,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6&gt;</span><br><span class="line">inet6 ::1 prefixlen 128</span><br><span class="line">inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2</span><br><span class="line">inet 127.0.0.1 netmask 0xff000000</span><br><span class="line">groups: lo</span><br><span class="line">nd6 options=21&lt;PERFORMNUD,AUTO_LINKLOCAL&gt;</span><br><span class="line">root@ykla:~ # </span><br></pre></td></tr></table></figure><p>以下内容同时适用于虚拟机和物理机。</p><p>默认情况下，FreeBSD 是正常联网的，如果不能可能是因为没有正确配置 DNS。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>清空里面原有内容。添加以下内容.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nameserver 223.5.5.5 #阿里 DNS，下同</span><br><span class="line">nameserver 223.6.6.6</span><br><span class="line">nameserver 8.8.8.8   #谷歌 DNS，境外设备专用</span><br></pre></td></tr></table></figure><p>之后重启一下网络配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/netstart restart</span><br></pre></td></tr></table></figure><p>尝试 ping 一下 163.com。（按下ctrl + C 可中断）</p><p>示例输出：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ykla:~ # ping 163.com</span><br><span class="line">PING 163.com (123.58.180.7): 56 data bytes</span><br><span class="line">64 bytes from 123.58.180.7: icmp_seq=0 ttl=55 time=30.617 ms</span><br><span class="line">64 bytes from 123.58.180.7: icmp_seq=1 ttl=55 time=30.608 ms</span><br><span class="line">64 bytes from 123.58.180.7: icmp_seq=2 ttl=55 time=30.633 ms</span><br><span class="line">^C</span><br><span class="line">--- 163.com ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0.0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 30.608/30.619/30.633/0.010 ms</span><br><span class="line">root@ykla:~ # </span><br></pre></td></tr></table></figure><p>网络联通。</p><h2 id="详细用法"><a href="#详细用法" class="headerlink" title="详细用法"></a>详细用法</h2><p>编辑后按 <code>ESC</code> 会弹出提示框，输入 <code>a</code> 保存；</p><ul><li>\ 或 [ 键 显示主选单。</li><li>o 输入 ASCII code，例如输入 65 就会显示 A。</li><li>u 跳到档案结尾。</li><li>t 跳到档案开头。</li><li>c 输入指令。在按了 Ctrl+c 后，上方选单会出现命令说明，例如你可以直接输入数字，表示将光标移到某一行。</li><li>y 搜寻。按了 Ctrl+y 之后，你可以输入欲搜寻的字符串。如果要搜寻下一个该字符串，只要再按 Ctrl+x 即可。预设的搜寻是不分大小写的，如果要区分大小写，你可以按 Ctrl+c 并输入 case 即可。如果要取消只要再按 Ctrl+c 并输入 nocase。</li><li>a 跳到行首。</li><li>e 跳到行尾。</li><li>d 删除光标所在位置的字符。</li><li>j 贴上上一次所删除的字符。</li><li>k 删除光标所在位置的一整行。</li><li>l 贴上上一次删除的一整行内容。</li><li>w 删除一个字。</li><li>r 贴上上一次所删除的字。</li><li>p 将光标移到上一行。</li><li>n 将光标移到下一行。</li><li>b 将光标移到上一个字，和方向键左键一样。</li><li>f 将光标移到下一个字，和方向键右键一样。</li><li>g 下一页。</li><li>v 上一页。</li><li>z 移到下一个字。</li><li>离开 ee。如果文件有修改过，它会问你是否要储存文件。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;FreeBSD-ee-用法及网络配置&quot;&gt;&lt;a href=&quot;#FreeBSD-ee-用法及网络配置&quot; class=&quot;headerlink&quot; title=&quot;FreeBSD ee 用法及网络配置&quot;&gt;&lt;/a&gt;FreeBSD ee 用法及网络配置&lt;/h2&gt;&lt;h2 id=&quot;概</summary>
      
    
    
    
    <category term="FreeBSD ee 用法及网络配置" scheme="http://example.com/categories/FreeBSD-ee-%E7%94%A8%E6%B3%95%E5%8F%8A%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="FreeBSD ee 用法及网络配置" scheme="http://example.com/tags/FreeBSD-ee-%E7%94%A8%E6%B3%95%E5%8F%8A%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD图解安装</title>
    <link href="http://example.com/2023/04/05/FreeBSD%E5%9B%BE%E8%A7%A3%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/04/05/FreeBSD%E5%9B%BE%E8%A7%A3%E5%AE%89%E8%A3%85/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T18:24:15.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FreeBSD图解安装"><a href="#FreeBSD图解安装" class="headerlink" title="FreeBSD图解安装"></a>FreeBSD图解安装</h2><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/%E5%AE%89%E8%A3%851.76fl21pbz740.webp"                      alt="安装1"                ></p><p>推荐等待十秒即可自动进入，也可以直接回车进入。</p><table><thead><tr><th align="center">选项</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">ACPI Support</td><td align="center">ACPI 支持。有很多教程说有问题就关闭他，实际上是胡扯。关闭了反而问题会更多</td></tr><tr><td align="center">Safe Mode</td><td align="center">安全模式</td></tr><tr><td align="center">Single User</td><td align="center">单用户模式，找回 root 密码或修复磁盘时会用到</td></tr><tr><td align="center">Verbose</td><td align="center">啰嗦模式，显示更多输出</td></tr></tbody></table><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1xk5if68ng8w.webp"                      alt="image"                ></p><p>选择 <code>install</code>,按下<code>回车键</code>进行安装。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.4apfp2uent40.webp"                      alt="image"                ></p><p>这里是设置键盘，直接回车即可。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1z1maaqi8xj4.webp"                      alt="image"                ></p><p>此处是设置主机名。<strong>严禁直接回车，设置主机名为空，否则后果自负。</strong></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.19z3j01lc44g.webp"                      alt="image"                ></p><p>推荐：只选 <code>src</code> 以及 <code>lib32</code>。部分显卡驱动或其他程序需要 <code>src</code>，经测试 <code>lib32</code> 后天安装无效。不推荐选 <code>ports</code>，因为即使选了 <code>ports</code> 也不会安装的，还是空的。</p><p><strong>严禁全选，全选部分组件会使用网络进行安装。</strong></p><table><thead><tr><th align="center">选项</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">base-dbg</td><td align="center">激活调试符号的基础工具，如 cat、ls 等</td></tr><tr><td align="center">kernel-dbg</td><td align="center">激活内核和模块的调试符号</td></tr><tr><td align="center">lib32-dbg</td><td align="center">用于在激活调试符号的 64 位版本的 FreeBSD 上运行 32 位应用程序的兼容库</td></tr><tr><td align="center">lib32</td><td align="center">用于在 64 位版本的 FreeBSD 上运行 32 位应用程序的兼容库</td></tr><tr><td align="center">ports</td><td align="center">ports</td></tr><tr><td align="center">src</td><td align="center">系统源代码</td></tr><tr><td align="center">tests</td><td align="center">测试工具</td></tr></tbody></table><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.b8427sn6ck8.webp"                      alt="image"                ></p><p>推荐：文件分区详解在第 6 章。这里推荐选择 auto ZFS&#x2F;UFS，一般来说内存小于 8GB 的应该选择 UFS，内存 8G 及以上的应该选用 ZFS。允许手动分区解压 txz 文件以自定义。</p><blockquote><p>注意：如果使用手动分区一直提示分区表损坏（corrupted）或类似字样，请先退出重启进入 shell 模式，刷新分区表：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># gpart recover ada0</span><br></pre></td></tr></table></figure><p>你在手动安装的时候可以判断是哪块硬盘，以确定 ada0 这个参数是多少。</p><p>刷新后，输入 <code>bsdinstall</code> 即可进入安装模式。</p><p>原因详情见 <a class="link"   href="https://handbook.bsdcn.org/di-18-zhang-cun-chu/18.3.-tiao-zheng-he-zeng-jia-ci-pan-da-xiao.html" >FreeBSD 手册open in new window<i class="fas fa-external-link-alt"></i></a>，但是我认为这是一个 bug。</p></blockquote><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.33qv10ze09a0.webp"                      alt="image"                ></p><p>现代计算机应该选择 GPT+UEFI。较老的计算机（比如 2013 年以前的）应该选择保持与图片一致的选项（GPT(BIOS)）。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.7klj2v91zvc0.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.37kiiwbl5mk0.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.4qu6d0ske4k0.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.3xmogs20khg0.webp"                      alt="image"                ></p><p>此处输入 root 密码，密码不会显示在屏幕上，且要求重复输入两次以确认一致性。密码强度默认无要求。</p><p>设置网卡IP</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.5t9hwrt04z40.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.4nc1lg18xfo0.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1ub6eiiljf6o.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.b6mw2qwcbls.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1i4wxasrpm1s.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.5s7l7680c8w0.webp"                      alt="image"                ></p><p>保持 DHCP 获取的 DNS 即可，也可以使用其他 DNS。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.2nbs63oyzp40.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.2y351a76b920.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.4yq1qryc4t80.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.6ongxnzwzk00.webp"                      alt="image"                ></p><p>!<img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.15g1hx2glkww.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1nrcu4eonijk.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1xoae0id4tts.webp"                      alt="image"                ></p><p><strong>严禁全选</strong></p><p>不要选<code>local_unbound</code>，会影响 DNS，见 <a class="link"   href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=262290" >https://bugs.freebsd.org/bugzilla/show_bug.cgi?id&#x3D;262290open in new window<i class="fas fa-external-link-alt"></i></a>。</p><p>虚拟机不需要选 <code>powerd</code>。</p><table><thead><tr><th align="center">选项</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">local_unbound</td><td align="center">启用 DNS 本地非绑定。这是基本系统预置的 unbound，仅用于本地缓存转发解析器使用。注意：如果开启，你的系统将不会正确联网，需要手动配置 DNS。如果你不知道这是什么不建议开启</td></tr><tr><td align="center">sshd</td><td align="center">开启 ssh 服务</td></tr><tr><td align="center">moused</td><td align="center">在 tty 界面显示鼠标</td></tr><tr><td align="center">ntpdate</td><td align="center">启用启动时的自动时钟同步功能</td></tr><tr><td align="center">ntpd</td><td align="center">用于自动时钟同步的网络时间协议（NTP）守护程序</td></tr><tr><td align="center">powerd</td><td align="center">电源管理</td></tr><tr><td align="center">dumpdev</td><td align="center">启用崩溃转储，用于调试系统</td></tr></tbody></table><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1jnk8hln8wn4.webp"                      alt="image"                ></p><p>推荐选择：这里是安全增强选择，应该选择 <code>disable_sendmail</code>，如果不禁止这个服务会使你在每次开机的时候卡上几分钟，而且这个服务本身没什么用，发邮件用的。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.4htqk7rgo5c0.webp"                      alt="image"                ></p><p>这个菜单选项是用来创建普通用户的。root 敢死队可以无视之。需要注意的是，最好将该用户其加入 wheel 组，其他参数可以保持默认设置不变。在 FreeBSD 14 及以后，所有用户的 shell 都被统一为了 sh。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.25p308hz509s.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1z7migv97v1c.webp"                      alt="image"                ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230405/image.1z7migv97v1c.webp"                      alt="image"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;FreeBSD图解安装&quot;&gt;&lt;a href=&quot;#FreeBSD图解安装&quot; class=&quot;headerlink&quot; title=&quot;FreeBSD图解安装&quot;&gt;&lt;/a&gt;FreeBSD图解安装&lt;/h2&gt;&lt;p&gt;&lt;img  
                     lazylo</summary>
      
    
    
    
    <category term="FreeBSD图解安装" scheme="http://example.com/categories/FreeBSD%E5%9B%BE%E8%A7%A3%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="FreeBSD图解安装" scheme="http://example.com/tags/FreeBSD%E5%9B%BE%E8%A7%A3%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD安装Gnome桌面环境</title>
    <link href="http://example.com/2023/04/05/FreeBSD%E5%AE%89%E8%A3%85Gnome%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    <id>http://example.com/2023/04/05/FreeBSD%E5%AE%89%E8%A3%85Gnome%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:42:14.425Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FreeBSD安装Gnome桌面环境"><a href="#FreeBSD安装Gnome桌面环境" class="headerlink" title="FreeBSD安装Gnome桌面环境"></a>FreeBSD安装Gnome桌面环境</h2><h3 id="配置-SSH允许-root-ssh"><a href="#配置-SSH允许-root-ssh" class="headerlink" title="配置 SSH允许 root ssh"></a>配置 SSH允许 root ssh</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ee /etc/ssh/sshd_config    #（删去前边的 #，并将 yes 或 no 修改为如下）</span><br><span class="line"></span><br><span class="line">PermitRootLogin yes          #允许 root 登录 </span><br><span class="line">PasswordAuthentication yes   #（可选）设置是否使用普通密码验证，如果不设置此参数则使用 PAM 认证登录，安全性更高</span><br></pre></td></tr></table></figure><blockquote><p>提示：删去前边的 <code>#</code> 是什么意思？<code>#</code> 在 UNIX 当中一般是起到一个注释作用，相当于 C 语言里面的 <code>//</code>。意味着后边的文字只起到说明作用，不起实际作用。</p></blockquote><blockquote><p><strong>故障排除</strong></p><p>如果你实在是找不到 <code>PasswordAuthentication no</code>，请你看看你改的究竟是 <code>/etc/ssh/</code>ssh<em><strong>d</strong></em><code>_config</code> 还是 <code>/etc/ssh/</code><strong>ssh</strong><code>_config</code>。<strong>sshd</strong> 才是我们真正要改的文件。</p></blockquote><h3 id="开启-SSH-服务"><a href="#开启-SSH-服务" class="headerlink" title="开启 SSH 服务"></a>开启 SSH 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">service sshd restart</span></span><br></pre></td></tr></table></figure><p>如果提示找不到 <code>sshd</code>,请执行下一命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sysrc sshd_enable=<span class="string">&quot;YES&quot;</span></span></span><br></pre></td></tr></table></figure><p>然后再</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">service sshd restart</span></span><br></pre></td></tr></table></figure><h3 id="显卡驱动以及虚拟机增强工具"><a href="#显卡驱动以及虚拟机增强工具" class="headerlink" title="显卡驱动以及虚拟机增强工具"></a>显卡驱动以及虚拟机增强工具</h3><h3 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h3><p>VMware 自动缩放屏幕请安装显卡驱动和虚拟机增强工具，即：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install xf86-video-vmware open-vm-tools xf86-input-vmmouse</span><br></pre></td></tr></table></figure><p>安装完毕后无需任何多余配置即可实现屏幕自动缩放。</p><blockquote><p>请勿做多余配置，比如去修改创建 <code>xorg.conf</code>，这会造成虚拟机卡死等问题。</p></blockquote><blockquote><p>wayland 下也需要安装该驱动。即使 wayland 暂不可用。</p></blockquote><blockquote><p>如果屏幕显示不正常（过大），请尝试：编辑虚拟机设置——&gt;硬件、设备——&gt;显示器——&gt;监视器、指定监视器设置——&gt;任意监视器的最大分辨率，设置为主机的分辨率或者略低于主机分辨率均可。</p></blockquote><h3 id="虚拟机增强工具"><a href="#虚拟机增强工具" class="headerlink" title="虚拟机增强工具"></a>虚拟机增强工具</h3><p>如果有桌面</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install open-vm-tools xf86-input-vmmouse</span><br></pre></td></tr></table></figure><p>如果没有桌面：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install open-vm-tools-nox11</span><br></pre></td></tr></table></figure><p>具体配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /boot/loader.conf</span><br></pre></td></tr></table></figure><p>写入</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fusefs_load=&quot;YES&quot;</span><br></pre></td></tr></table></figure><h3 id="共享文件夹（可选）"><a href="#共享文件夹（可选）" class="headerlink" title="共享文件夹（可选）"></a>共享文件夹（可选）</h3><p>请先安装虚拟机增强工具。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmhgfs-fuse .host:/selfsharefold /mnt/hgfs</span><br></pre></td></tr></table></figure><p>查看共享文件夹</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /mnt/hgfs</span><br></pre></td></tr></table></figure><h2 id="安装Gnome"><a href="#安装Gnome" class="headerlink" title="安装Gnome"></a>安装Gnome</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">正常安装</span></span><br><span class="line">pkg install xorg gnome noto-sc xdg-user-dirs</span><br></pre></td></tr></table></figure><p>解释:</p><table><thead><tr><th align="center">软件</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">xorg</td><td align="center">X11</td></tr><tr><td align="center">gnome</td><td align="center">Gnome 主程序</td></tr><tr><td align="center">noto-sc</td><td align="center">思源黑体——简体中文</td></tr><tr><td align="center">xdg-user-dirs</td><td align="center">用于创建用户家目录的子目录</td></tr></tbody></table><blockquote><p><strong>精简安装（仅限经验丰富的用户）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install xorg-minimal gnome-lite wqy-fonts xdg-user-dirs</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装谷歌 系统管理 终端 gedit</span></span><br><span class="line">pkg install chromium gnome-system-monitor gnome-console gedit </span><br></pre></td></tr></table></figure><p>如果安装了完整版本也可以使用 pkg 包管理器卸载自带的游戏软件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg delete gnome-2048 gnome-klotski gnome-tetravex gnome-mines gnome-taquin gnome-sudoku gnome-robots gnome-nibbles lightsoff tali quadrapassel swell-foop gnome-mahjongg five-or-more iagno aisleriot four-in-a-row</span><br></pre></td></tr></table></figure></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /etc/fstab</span><br></pre></td></tr></table></figure><p>添加内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proc                    /proc   procfs  rw              0       0</span><br></pre></td></tr></table></figure><p>设置gnome-session输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">% </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;/usr/local/bin/gnome-session&quot;</span> &gt; ~/.xinitrc</span></span><br></pre></td></tr></table></figure><h3 id="配置启动项："><a href="#配置启动项：" class="headerlink" title="配置启动项："></a>配置启动项：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ee /etc/rc.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加</span></span><br><span class="line">dbus_enable=&quot;YES&quot;</span><br><span class="line">hald_enable=&quot;YES&quot;</span><br><span class="line">gdm_enable=&quot;YES&quot;</span><br><span class="line">gnome_enable=&quot;YES&quot;</span><br></pre></td></tr></table></figure><h3 id="中文化GNOME-界面"><a href="#中文化GNOME-界面" class="headerlink" title="中文化GNOME 界面"></a>中文化GNOME 界面</h3><blockquote><p>本小节配置参数与用户 shell 无关，即使是 csh 也该如此配置。</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/gdm/locale.conf</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_CTYPE=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_MESSAGES=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">LC_ALL=&quot;zh_CN.UTF-8&quot;</span><br></pre></td></tr></table></figure><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><p>gnome 捆绑的输入法面板是 <code>ibus</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install zh-ibus-libpinyin </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装好运行初始化命令</span> </span><br><span class="line">ibus-setup</span><br></pre></td></tr></table></figure><p>安装输入法(这里只装拼音输入法</p><p>运行ibus-setup重启系统,还要在系统设置—–&gt;区域与语言—&gt;输入源加入中文输入法</p><h3 id="终端显示中文（文件用户根目录）"><a href="#终端显示中文（文件用户根目录）" class="headerlink" title="终端显示中文（文件用户根目录）"></a>终端显示中文（文件用户根目录）</h3><blockquote><p>此处对用户 shell 存疑。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee .cshrc</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenv LANG zh_CN.UTF-8</span><br><span class="line">setenv LC_CTYPE zh_CN.UTF-8</span><br><span class="line">setenv LC_ALL zh_CN.UTF-8</span><br></pre></td></tr></table></figure><h2 id="优化系统"><a href="#优化系统" class="headerlink" title="优化系统"></a>优化系统</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install gnome-tweaks</span><br></pre></td></tr></table></figure><p>安装其他软件&#x2F;安装字体</p><h3 id="Firefox-与-Chromium-安装"><a href="#Firefox-与-Chromium-安装" class="headerlink" title="Firefox 与 Chromium 安装"></a>Firefox 与 Chromium 安装</h3><h3 id="火狐浏览器"><a href="#火狐浏览器" class="headerlink" title="火狐浏览器"></a>火狐浏览器</h3><h4 id="安装普通版本（更新频繁）："><a href="#安装普通版本（更新频繁）：" class="headerlink" title="安装普通版本（更新频繁）："></a>安装普通版本（更新频繁）：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install firefox</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/ports/www/firefox</span><br><span class="line">make install clean </span><br></pre></td></tr></table></figure><h4 id="安装长期支持版本："><a href="#安装长期支持版本：" class="headerlink" title="安装长期支持版本："></a>安装长期支持版本：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install firefox-esr</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/ports/www/firefox-esr/ &amp;&amp; make install clean</span><br></pre></td></tr></table></figure><h3 id="Chromium（Chromium-不是-chrome，但是启动命令是-chrome）"><a href="#Chromium（Chromium-不是-chrome，但是启动命令是-chrome）" class="headerlink" title="Chromium（Chromium 不是 chrome，但是启动命令是 chrome）"></a>Chromium（Chromium 不是 chrome，但是启动命令是 chrome）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install chromium</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/ports/www/chromium</span><br><span class="line">make install clean</span><br></pre></td></tr></table></figure><h3 id="安装其他软件（可选）"><a href="#安装其他软件（可选）" class="headerlink" title="安装其他软件（可选）"></a>安装其他软件（可选）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pkg install -y wqy-fonts 字体</span><br><span class="line">pkg install -y smplayer (视频播放器)</span><br><span class="line">pkg install -y zh_CN-libreoffice(中文版办公软件)</span><br><span class="line">pkg install -y gimp(图片处理)</span><br><span class="line">pkg install -y thunderbird(邮件客户端)</span><br><span class="line">pkg install -y transmission (BT下载工具)</span><br><span class="line">pkg install -y system-config-printer(帮助添加打印机)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;FreeBSD安装Gnome桌面环境&quot;&gt;&lt;a href=&quot;#FreeBSD安装Gnome桌面环境&quot; class=&quot;headerlink&quot; title=&quot;FreeBSD安装Gnome桌面环境&quot;&gt;&lt;/a&gt;FreeBSD安装Gnome桌面环境&lt;/h2&gt;&lt;h3 id=&quot;配</summary>
      
    
    
    
    <category term="FreeBSD安装Gnome桌面环境" scheme="http://example.com/categories/FreeBSD%E5%AE%89%E8%A3%85Gnome%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="FreeBSD安装Gnome桌面环境" scheme="http://example.com/tags/FreeBSD%E5%AE%89%E8%A3%85Gnome%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD压缩解压与sudo安装</title>
    <link href="http://example.com/2023/04/05/FreeBSD%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%E4%B8%8Esudo%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/04/05/FreeBSD%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%E4%B8%8Esudo%E5%AE%89%E8%A3%85/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:45:09.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FreeBSD压缩解压与sudo安装"><a href="#FreeBSD压缩解压与sudo安装" class="headerlink" title="FreeBSD压缩解压与sudo安装"></a>FreeBSD压缩解压与sudo安装</h2><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><p>安装 zip 压缩文件 <code># pkg install zip unzip</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># zip test.zip test # 打包 zip 格式文件 </span><br><span class="line"></span><br><span class="line"># unzip test.zip # 释放 zip 格式文件 </span><br></pre></td></tr></table></figure><h2 id="tar-x2F-xz"><a href="#tar-x2F-xz" class="headerlink" title="tar&#x2F;xz"></a>tar&#x2F;xz</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># tar -cvf test.tar test # 打包 tar 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -xvf test.tar # 释放 tar 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -zcvf test.tar.gz test # 打包 gzip 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -zxvf test.tar.gz # 释放 gzip 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -jcvf test.tar.bz2 test # 打包 bzip2 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -jxvf test.tar.bz2 # 释放 bzip2 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -Jcvf test.tar.xz test # 打包 xz 格式文件 </span><br><span class="line"></span><br><span class="line"># tar -Jxvf test.tar.xz # 释放 xz 格式文件 </span><br><span class="line"></span><br><span class="line"># xz -z -k test.tar # 打包 xz 格式文件，如不加 -k 参数，命令执行完原文件将被删除 </span><br><span class="line"></span><br><span class="line"># xz -d -k test.tar.xz # 释放 xz 格式文件，如不加 -k 参数，命令执行完 xz 文件将被删除</span><br></pre></td></tr></table></figure><h2 id="7z-x2F-7za"><a href="#7z-x2F-7za" class="headerlink" title="7z&#x2F;7za"></a>7z&#x2F;7za</h2><p>FreeBSD 操作系统下，7z 和 7za 命令均通过<code># pkg install -y 7-zip</code>获取，别安装成了 <code>p7zip</code>。</p><p>示例如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 7z a test.7z test # 7z 打包文件 </span><br><span class="line"># 7z x test.7z # 7z 释放文件</span><br><span class="line"># 7za a test.7z test # 7za 打包文件 </span><br><span class="line"># 7za x test.7z # 7za 释放文件</span><br></pre></td></tr></table></figure><h3 id="sudo安装"><a href="#sudo安装" class="headerlink" title="sudo安装"></a>sudo安装</h3><blockquote><p>OpenBSD 认为该软件漏洞太多，自行开发了 <a class="link"   href="https://man.openbsd.org/doas" >doasopen in new window<i class="fas fa-external-link-alt"></i></a>（FreeBSD 也可以用）。</p></blockquote><p>FreeBSD 基本系统默认不自带 <code>sudo</code> 命令，需要使用 <code>root</code> 权限自行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install sudo</span><br></pre></td></tr></table></figure><h3 id="sudo-免密码"><a href="#sudo-免密码" class="headerlink" title="sudo 免密码"></a>sudo 免密码</h3><p>在 <code>/usr/local/etc/sudoers.d/</code> 下新建两个文件 <code>username</code>（需要免密码的用户）和 <code>wheel</code>：</p><ul><li>文件 <code>username</code>内容如下：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">admin ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure><ul><li>文件 <code>wheel</code> 内容如下：</li></ul><p>多加一行 <code>NOPASSWD:</code>，使用 <code>sudo</code> 时不需要输入密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">wheel ALL=(ALL) NOPASSWD:ALL</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;FreeBSD压缩解压与sudo安装&quot;&gt;&lt;a href=&quot;#FreeBSD压缩解压与sudo安装&quot; class=&quot;headerlink&quot; title=&quot;FreeBSD压缩解压与sudo安装&quot;&gt;&lt;/a&gt;FreeBSD压缩解压与sudo安装&lt;/h2&gt;&lt;h3 id=&quot;z</summary>
      
    
    
    
    <category term="FreeBSD压缩与解压" scheme="http://example.com/categories/FreeBSD%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/"/>
    
    
    <category term="FreeBSD压缩与解压" scheme="http://example.com/tags/FreeBSD%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD 换源方式</title>
    <link href="http://example.com/2023/04/05/FreeBSD%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/"/>
    <id>http://example.com/2023/04/05/FreeBSD%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:38:32.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FreeBSD-换源方式"><a href="#FreeBSD-换源方式" class="headerlink" title="FreeBSD 换源方式"></a>FreeBSD 换源方式</h2><p>FreeBSD 有四类源：pkg、ports、portsnap、update。</p><p><strong>对于失去安全支持的版本，请参考最后一节。</strong></p><p><strong>本文对于一个源列出了多个镜像站，无需全部配置，只需选择其一即可。</strong></p><p><strong>目前境内没有官方镜像站，以下均为非官方镜像站。</strong></p><h3 id="pkg-源-pkg-源提供二进制安装包"><a href="#pkg-源-pkg-源提供二进制安装包" class="headerlink" title="pkg 源:pkg 源提供二进制安装包"></a>pkg 源:pkg 源提供二进制安装包</h3><p>pkg 的下载路径是 <code>/var/cache/pkg/</code></p><p>FreeBSD 中 pkg 源分为系统级和用户级两个配置文件。不建议直接修改 <code>/etc/pkg/FreeBSD.conf</code> ,因为该文件会随着基本系统的更新而发生改变。</p><p>创建用户级源目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/etc/pkg/repos</span><br></pre></td></tr></table></figure><h3 id="网易开源镜像站"><a href="#网易开源镜像站" class="headerlink" title="网易开源镜像站"></a>网易开源镜像站</h3><p>创建用户级源文件:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/pkg/repos/163.conf</span><br></pre></td></tr></table></figure><p>写入以下内容:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">163: &#123;  </span><br><span class="line">url: &quot;pkg+http://mirrors.163.com/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,  </span><br><span class="line">mirror_type: &quot;srv&quot;,  </span><br><span class="line">signature_type: &quot;none&quot;,  </span><br><span class="line">fingerprints: &quot;/usr/share/keys/pkg&quot;,  </span><br><span class="line">enabled: yes</span><br><span class="line">&#125;</span><br><span class="line">FreeBSD: &#123; enabled: no &#125;</span><br></pre></td></tr></table></figure><p><strong>故障排除</strong></p><p><strong>若要获取滚动更新的包，请将 <code>quarterly</code> 修改为 <code>latest</code>。二者区别见 FreeBSD 手册。请注意, <code>CURRENT</code> 版本只有 <code>latest</code>：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;&#x27; &#x27;s/quarterly/latest/g&#x27; /etc/pkg/FreeBSD.conf</span><br></pre></td></tr></table></figure><p><strong>若要使用 https,请先安装 <code>security/ca_root_nss</code> ,并将 <code>http</code> 修改为 <code>https</code>,最后使用命令 <code># pkg update -f</code> 刷新缓存即可,下同。</strong></p><h3 id="中国科学技术大学开源软件镜像站"><a href="#中国科学技术大学开源软件镜像站" class="headerlink" title="中国科学技术大学开源软件镜像站"></a>中国科学技术大学开源软件镜像站</h3><p>创建用户级源文件:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/pkg/repos/ustc.conf</span><br></pre></td></tr></table></figure><p>写入以下内容:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ustc: &#123;  </span><br><span class="line">url: &quot;pkg+http://mirrors.ustc.edu.cn/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,  </span><br><span class="line">mirror_type: &quot;srv&quot;,  </span><br><span class="line">signature_type: &quot;none&quot;,  </span><br><span class="line">fingerprints: &quot;/usr/share/keys/pkg&quot;,  </span><br><span class="line">enabled: yes</span><br><span class="line">&#125;</span><br><span class="line">FreeBSD: &#123; enabled: no &#125;</span><br></pre></td></tr></table></figure><h3 id="南京大学开源镜像站"><a href="#南京大学开源镜像站" class="headerlink" title="南京大学开源镜像站"></a>南京大学开源镜像站</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/pkg/repos/nju.conf</span><br></pre></td></tr></table></figure><p>写入以下内容:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nju: &#123;  </span><br><span class="line">url: &quot;pkg+http://mirrors.nju.edu.cn/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,  </span><br><span class="line">mirror_type: &quot;srv&quot;,  </span><br><span class="line">signature_type: &quot;none&quot;,  </span><br><span class="line">fingerprints: &quot;/usr/share/keys/pkg&quot;,  </span><br><span class="line">enabled: yes</span><br><span class="line">&#125;</span><br><span class="line">FreeBSD: &#123; enabled: no &#125;</span><br></pre></td></tr></table></figure><h3 id="北京交通大学镜像站"><a href="#北京交通大学镜像站" class="headerlink" title="北京交通大学镜像站"></a>北京交通大学镜像站</h3><p>创建用户级源文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/pkg/repos/bjtu.conf</span><br></pre></td></tr></table></figure><p>写入以下内容:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bjtu: &#123;</span><br><span class="line">  url: &quot;pkg+http://mirror.bjtu.edu.cn/reverse/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,</span><br><span class="line">  mirror_type: &quot;srv&quot;,</span><br><span class="line">  signature_type: &quot;none&quot;,</span><br><span class="line">  fingerprints: &quot;/usr/share/keys/pkg&quot;,</span><br><span class="line">  enabled: yes</span><br><span class="line">&#125;</span><br><span class="line">FreeBSD: &#123; enabled: no &#125;</span><br></pre></td></tr></table></figure><p>若要获取滚动更新的包,请将<code>quarterly</code>修改为<code>latest</code>.请注意,<code>CURRENT</code>版本只有<code>latest</code>.</p><p>若要使用https,请先安装security&#x2F;ca_root_nss,并将<code>http</code>修改为<code>https</code>,最后使用命令</p><p><code>pkg update -f</code>刷新缓存即可.</p><h3 id="ports源-提供源码方式安装软件的包管理器"><a href="#ports源-提供源码方式安装软件的包管理器" class="headerlink" title="ports源:提供源码方式安装软件的包管理器"></a>ports源:提供源码方式安装软件的包管理器</h3><p>ports 下载路径是 <code>/usr/ports/distfiles</code></p><blockquote><p><strong>警告</strong></p><p>只有 freebsd.cn 镜像站的 ports 镜像是完整的，其余的大概只镜像了不到十分之一。请优先考虑使用 FreeBSD.cn。见 <a class="link"   href="https://github.com/ustclug/discussions/issues/408" >https://github.com/ustclug/discussions/issues/408open in new window<i class="fas fa-external-link-alt"></i></a>。</p></blockquote><h3 id="FreeBSD-cn"><a href="#FreeBSD-cn" class="headerlink" title="FreeBSD.cn"></a>FreeBSD.cn</h3><p>创建或修改文件 <code> ee /etc/make.conf</code></p><p>写入以下内容（注意结尾的 &#x2F; 是必须的！下同）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?=http://ports.freebsd.cn/ports-distfiles/$&#123;DIST_SUBDIR&#125;/</span><br></pre></td></tr></table></figure><h3 id="网易开源镜像站-1"><a href="#网易开源镜像站-1" class="headerlink" title="网易开源镜像站"></a>网易开源镜像站</h3><p>创建或修改文件 <code> ee /etc/make.conf</code></p><p>写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?=http://mirrors.163.com/freebsd-ports/distfiles/$&#123;DIST_SUBDIR&#125;/</span><br></pre></td></tr></table></figure><h3 id="中国科学技术大学开源软件镜像站-1"><a href="#中国科学技术大学开源软件镜像站-1" class="headerlink" title="中国科学技术大学开源软件镜像站"></a>中国科学技术大学开源软件镜像站</h3><p>创建或修改文件 <code> ee /etc/make.conf</code></p><p>写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?=http://mirrors.ustc.edu.cn/freebsd-ports/distfiles/$&#123;DIST_SUBDIR&#125;/</span><br></pre></td></tr></table></figure><h3 id="北京交通大学开源软件镜像站"><a href="#北京交通大学开源软件镜像站" class="headerlink" title="北京交通大学开源软件镜像站"></a>北京交通大学开源软件镜像站</h3><p>创建或修改文件<code>ee /etc/make.conf</code></p><p>写入以下内容:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?=http://mirror.bjtu.edu.cn/reverse/freebsd-pkg/ports-distfiles/</span><br></pre></td></tr></table></figure><h2 id="portsnap-源-打包的-ports文件"><a href="#portsnap-源-打包的-ports文件" class="headerlink" title="portsnap 源:打包的 ports文件"></a>portsnap 源:打包的 ports文件</h2><h3 id="FreeBSD-cn-1"><a href="#FreeBSD-cn-1" class="headerlink" title="FreeBSD.cn"></a>FreeBSD.cn</h3><p>编辑 portsnap 配置文件 <code># ee /etc/portsnap.conf</code> :</p><p>将 <code>SERVERNAME=portsnap.FreeBSD.org</code> 修改为 <code>SERVERNAME=portsnap.FreeBSD.cn</code></p><p><strong>获取 portsnap 更新</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">portsnap auto #同时支持命令行和 cron</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">portsnap fetch extract</span><br></pre></td></tr></table></figure><p><strong>故障排除</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Snapshot appears to have been created more than one day into the future!</span><br><span class="line">(Is the system clock correct?)</span><br><span class="line">Cowardly refusing to proceed any further.</span><br></pre></td></tr></table></figure><p>需要同步时间。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpdate ntp.api.bz</span><br></pre></td></tr></table></figure><h2 id="reebsd-update-源-提供基本系统更新"><a href="#reebsd-update-源-提供基本系统更新" class="headerlink" title="reebsd-update 源:提供基本系统更新"></a>reebsd-update 源:提供基本系统更新</h2><p>注意：只有一级架构的 release 版本才提供该源。也就是说 current 和 stable 是没有的。 关于架构的支持等级说明请看：</p><p><a class="link"   href="https://www.freebsd.org/platforms" >https://www.freebsd.org/platforms<i class="fas fa-external-link-alt"></i></a></p><h3 id="FreeBSD-cn-2"><a href="#FreeBSD-cn-2" class="headerlink" title="FreeBSD.cn"></a>FreeBSD.cn</h3><p>编辑 <code>ee /etc/freebsd-update.conf</code> 文件:</p><p>将 <code>ServerName update.FreeBSD.org</code> 修改为 <code>ServerName update.FreeBSD.cn</code></p><p><strong>例:从 FreeBSD 12 升级到 13.0</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">freebsd-update -r 13.0-RELEASE upgrade</span><br></pre></td></tr></table></figure><h2 id="北京交通大学FreeBSD-镜像使用帮助"><a href="#北京交通大学FreeBSD-镜像使用帮助" class="headerlink" title="北京交通大学FreeBSD 镜像使用帮助"></a>北京交通大学FreeBSD 镜像使用帮助</h2><h3 id="pkg-源-pkg源提供二进制安装包"><a href="#pkg-源-pkg源提供二进制安装包" class="headerlink" title="pkg 源:pkg源提供二进制安装包."></a>pkg 源:pkg源提供二进制安装包.</h3><p>FreeBSD中pkg源分为系统级和用户级两个源.不建议直接修改&#x2F;etc&#x2F;pkg&#x2F;FreeBSD.conf,因为该文件会随着基本系统的更新而发生改变.</p><p>创建用户级源目录:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/etc/pkg/repos</span><br></pre></td></tr></table></figure><p>创建用户级源文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee /usr/local/etc/pkg/repos/bjtu.conf</span><br></pre></td></tr></table></figure><p>写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bjtu: &#123;</span><br><span class="line">  url: &quot;pkg+http://mirror.bjtu.edu.cn/reverse/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,</span><br><span class="line">  mirror_type: &quot;srv&quot;,</span><br><span class="line">  signature_type: &quot;none&quot;,</span><br><span class="line">  fingerprints: &quot;/usr/share/keys/pkg&quot;,</span><br><span class="line">  enabled: yes</span><br><span class="line">&#125;</span><br><span class="line">FreeBSD: &#123; enabled: no &#125;</span><br></pre></td></tr></table></figure><p>若要获取滚动更新的包,请将<code>quarterly</code>修改为<code>latest</code>.请注意,<code>CURRENT</code>版本只有<code>latest</code>.</p><p>若要使用https,请先安装security&#x2F;ca_root_nss,并将<code>http</code>修改为<code>https</code>,最后使用命令<code>#pkg update -f</code>刷新缓存即可.</p><h3 id="ports源-提供源码方式安装软件的包管理器-1"><a href="#ports源-提供源码方式安装软件的包管理器-1" class="headerlink" title="ports源:提供源码方式安装软件的包管理器"></a>ports源:提供源码方式安装软件的包管理器</h3><p>创建或修改文件<code>#ee /etc/make.conf</code>:</p><p>写入以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?=http://mirror.bjtu.edu.cn/reverse/freebsd-pkg/ports-distfiles/</span><br></pre></td></tr></table></figure><h3 id="portsnap源-打包的ports文件"><a href="#portsnap源-打包的ports文件" class="headerlink" title="portsnap源:打包的ports文件"></a>portsnap源:打包的ports文件</h3><p>编辑portsnap配置文件 <code>#ee /etc/portsnap.conf</code> :</p><p>将<code>SERVERNAME=portsnap.FreeBSD.org</code> 修改为<code>SERVERNAME=freebsd-portsnap.mirror.bjtulug.org</code></p><p>获取portsnap更新:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">portsnap fetch extract</span><br></pre></td></tr></table></figure><h3 id="freebsd-update源-提供基本系统更新"><a href="#freebsd-update源-提供基本系统更新" class="headerlink" title="freebsd-update源:提供基本系统更新"></a>freebsd-update源:提供基本系统更新</h3><p>编辑<code>#ee /etc/freebsd-update.conf</code> 文件:</p><p>将<code>ServerName update.FreeBSD.org</code> 修改为<code>ServerName freebsd-update.mirror.bjtulug.org</code></p><p>例:从FreeBSD 11升级到12.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">freebsd-update -r 12.0-RELEASE upgrade</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;FreeBSD-换源方式&quot;&gt;&lt;a href=&quot;#FreeBSD-换源方式&quot; class=&quot;headerlink&quot; title=&quot;FreeBSD 换源方式&quot;&gt;&lt;/a&gt;FreeBSD 换源方式&lt;/h2&gt;&lt;p&gt;FreeBSD 有四类源：pkg、ports、portsna</summary>
      
    
    
    
    <category term="FreeBSD 换源方式" scheme="http://example.com/categories/FreeBSD-%E6%8D%A2%E6%BA%90%E6%96%B9%E5%BC%8F/"/>
    
    
    <category term="FreeBSD 换源方式" scheme="http://example.com/tags/FreeBSD-%E6%8D%A2%E6%BA%90%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>解决linux的‘ll’命令无法使用的问题</title>
    <link href="http://example.com/2023/04/05/%E8%A7%A3%E5%86%B3linux%E4%B8%8B%E9%9D%A2%E2%80%98ll%E2%80%99%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2023/04/05/%E8%A7%A3%E5%86%B3linux%E4%B8%8B%E9%9D%A2%E2%80%98ll%E2%80%99%E5%91%BD%E4%BB%A4%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:34:56.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决linux的‘ll’命令无法使用的问题"><a href="#解决linux的‘ll’命令无法使用的问题" class="headerlink" title="解决linux的‘ll’命令无法使用的问题"></a>解决linux的‘ll’命令无法使用的问题</h2><p>提示错误信息</p><p>bash: ll: command not found</p><p>原因<br>因为 ll 并不是Linux 下一个基本的命令，它实际上是ls -l 的一个别名，默认不支持命令ll ，必须用ls-l；</p><p>解决方法<br>1.打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure><p>2.添加如下语句</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias ll=&#x27;ls -l’</span><br></pre></td></tr></table></figure><p>3.更新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>好啦，这样就完美解决了 <strong>ll</strong> 不能用的问题！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决linux的‘ll’命令无法使用的问题&quot;&gt;&lt;a href=&quot;#解决linux的‘ll’命令无法使用的问题&quot; class=&quot;headerlink&quot; title=&quot;解决linux的‘ll’命令无法使用的问题&quot;&gt;&lt;/a&gt;解决linux的‘ll’命令无法使用的问题&lt;/</summary>
      
    
    
    
    <category term="解决linux的‘ll’命令" scheme="http://example.com/categories/%E8%A7%A3%E5%86%B3linux%E7%9A%84%E2%80%98ll%E2%80%99%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="解决linux的‘ll’命令" scheme="http://example.com/tags/%E8%A7%A3%E5%86%B3linux%E7%9A%84%E2%80%98ll%E2%80%99%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机VMware Tools的安装</title>
    <link href="http://example.com/2023/04/05/%E8%99%9A%E6%8B%9F%E6%9C%BAVMware%20Tools%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/04/05/%E8%99%9A%E6%8B%9F%E6%9C%BAVMware%20Tools%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2023-04-04T16:00:00.000Z</published>
    <updated>2023-04-04T17:37:56.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VMware-Tools的安装"><a href="#VMware-Tools的安装" class="headerlink" title="VMware Tools的安装"></a>VMware Tools的安装</h2><h4 id="一、VMware-Tools的作用"><a href="#一、VMware-Tools的作用" class="headerlink" title="一、VMware Tools的作用"></a>一、VMware Tools的作用</h4><p>1.最大的好处是可以直接把windows界面的文件拖进linux虚拟机内。<br>2.鼠标可以直接从虚拟机移动到windows等等好处。</p><h4 id="二、VMware-Tools的安装步骤"><a href="#二、VMware-Tools的安装步骤" class="headerlink" title="二、VMware Tools的安装步骤"></a>二、VMware Tools的安装步骤</h4><ol><li>首先把linux虚拟机关机或退出，然后点击“编辑虚拟机设置”。</li><li>点击CD&#x2F;DVD，选择使用物理驱动器–自动检测。</li><li>运行虚拟机</li><li>虚拟机-安装vmware tool（这里我的己安装了所以显示重新安装vmware tool）</li><li>安装完vmware tool后，打开vmware tool就会出现如下图里的VMwareTools的linux压缩包文件</li><li>这里我们鼠标右键选择使用归档管理器打开，然后另存到桌面（为了方便使用终端找到该压缩文件）</li><li>打开终端，进入桌面目录，即输入”cd 桌面”，再解压VMwareTools.tar.gz压缩包</li><li>进入桌面后，输入：cd vmware-tools-distrib&#x2F;</li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd vmware-tools-distrib/</span><br></pre></td></tr></table></figure><p>进入vmware-tools-distrib文件夹后，继续输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./vmware-install.pl</span><br></pre></td></tr></table></figure><p>一直回车（注意看每个回应的语句，个别版本需要手动回复yes）。</p><p>直到出现Enjoy, –the VMware team如下图，就表示安装成功了，然后手动重启虚拟机</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;VMware-Tools的安装&quot;&gt;&lt;a href=&quot;#VMware-Tools的安装&quot; class=&quot;headerlink&quot; title=&quot;VMware Tools的安装&quot;&gt;&lt;/a&gt;VMware Tools的安装&lt;/h2&gt;&lt;h4 id=&quot;一、VMware-Tool</summary>
      
    
    
    
    <category term="VMware Tools的安装" scheme="http://example.com/categories/VMware-Tools%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="VMware Tools的安装" scheme="http://example.com/tags/VMware-Tools%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Cockpit的安装教程</title>
    <link href="http://example.com/2023/03/29/Cockpit%20-%20%E5%9F%BA%E4%BA%8EWeb%E7%9A%84Linux%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2023/03/29/Cockpit%20-%20%E5%9F%BA%E4%BA%8EWeb%E7%9A%84Linux%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2023-03-28T16:00:00.000Z</published>
    <updated>2023-03-29T05:58:11.180Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Cockpit-基于Web的Linux管理工具的安装和使用教程"><a href="#Cockpit-基于Web的Linux管理工具的安装和使用教程" class="headerlink" title="Cockpit - 基于Web的Linux管理工具的安装和使用教程"></a>Cockpit - 基于Web的Linux管理工具的安装和使用教程</h3><h3 id="一、基本介绍"><a href="#一、基本介绍" class="headerlink" title="一、基本介绍"></a>一、基本介绍</h3><h4 id="1，什么是-Cockpit？"><a href="#1，什么是-Cockpit？" class="headerlink" title="1，什么是 Cockpit？"></a>1，什么是 Cockpit？</h4><p>（1）<strong>Cockpit</strong> 是一个免费且开源的基于 <strong>web</strong> 的 <strong>Linux</strong> 服务器管理工具并且在 <strong>CentOS 8</strong> 和 <strong>RHEL  8</strong> 中，<strong>Cockpit</strong> 更是成为其默认服务器管理工具。</p><p>（2）通过 <strong>Cockpit</strong> 提供的友好的 <strong>Web</strong> 前端界面可以轻松地监视和管理我们的 <strong>GNU</strong>&#x2F;<strong>Linux</strong> 服务器，执行诸如存储管理、网络配置、检查日志、虚拟机管理等任务。</p><h4 id="2，Cockpit-的功能和特点"><a href="#2，Cockpit-的功能和特点" class="headerlink" title="2，Cockpit 的功能和特点"></a>2，Cockpit 的功能和特点</h4><ul><li><strong>Cockpit</strong> 使用 <strong>systemd</strong> 完成从运行守护进程到服务几乎所有的功能</li><li>集中式管理，通过一个会话窗口管理网络中的所有 <strong>Linux</strong> 服务器</li><li>创建和管理 <strong>KVM</strong>、<strong>oVirt</strong> 虚拟机</li><li>包括 <strong>LVM</strong> 在内的存储配置</li><li>基本的网络配置管理</li><li>用户 <strong>user account</strong> 管理</li><li>基于 <strong>web</strong> 的终端</li><li>图形化的系统性能展示</li><li>使用 <strong>sosreport</strong> 收集系统配置和诊断信息</li><li>支持 <strong>Debian</strong>、<strong>Redhat</strong>、<strong>CentOS</strong>、<strong>Fedora</strong>、<strong>Atomic</strong>、<strong>Arch</strong> <strong>Linux</strong> 和 <strong>Ubuntu</strong></li></ul><p>更多的Cockpit控制台扩展插件请查看官方列表：<a class="link"   href="https://cockpit-project.org/applications.html" >https://cockpit-project.org/applications.html<i class="fas fa-external-link-alt"></i></a></p><h3 id="二、安装配置"><a href="#二、安装配置" class="headerlink" title="二、安装配置"></a>二、安装配置</h3><h4 id="1，安装-dnf"><a href="#1，安装-dnf" class="headerlink" title="1，安装 dnf"></a>1，安装 dnf</h4><p>  我们需要使用 <strong>dnf</strong> 命令安装 <strong>Cockpit</strong>，但 <strong>CentOS 7</strong> 并不包含该命令，需要按照如下步骤进行安装。而对于 <strong>CentOS 8</strong> 自带了 <strong>dnf</strong>，则可以跳过此步骤。</p><p>（1）所以首先执行如下命令安装并启用 <strong>epel-release</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><p>（2）接着执行如下命令安装 <strong>dnf</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install dnf</span><br></pre></td></tr></table></figure><p>（3）安装完毕后执行如下命令查看是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf --version</span><br></pre></td></tr></table></figure><h4 id="2，安装-Cockpit"><a href="#2，安装-Cockpit" class="headerlink" title="2，安装 Cockpit"></a>2，安装 Cockpit</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装kvm</span><br><span class="line"></span><br><span class="line">yum install qemu-kvm libvirt libvirt-daemon virt-install virt-manager libvirt-dbus</span><br><span class="line">systemctl start libvirtd.service</span><br><span class="line"></span><br><span class="line">注意：如果访问虚拟机，点击虚拟机Create VM按钮是灰色的，就表示没有安装virt-install包</span><br></pre></td></tr></table></figure><p>（1）首先执行如下命令安装 <strong>Cockpit</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install cockpit cockpit-machines</span><br></pre></td></tr></table></figure><p>（2）安装完毕后执行如下命令启动 <strong>Cockpit</strong> 服务并设置为自动启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start cockpit.socket</span><br><span class="line">systemctl enable cockpit.socket</span><br></pre></td></tr></table></figure><p>（3）接着执行如下命令查看是否启动成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status cockpit.socket</span><br></pre></td></tr></table></figure><p>（4）由于 <strong>Cockpit</strong> 默认使用的是 <strong>9090</strong> 端口，执行如下命令打开这个端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=9090/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>  (5) 修改默认端口（可选）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认cockpit使用的是9090端口，所以我这里将9090端口改成9290</span></span><br><span class="line"></span><br><span class="line">sed -i s#9090#9290# /usr/lib/systemd/system/cockpit.socket</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改完成后重启服务并添加开机自启</span></span><br><span class="line"></span><br><span class="line">systemctl restart cockpit.socket</span><br><span class="line">systemctl enable cockpit.socket</span><br></pre></td></tr></table></figure><h4 id="三、使用说明"><a href="#三、使用说明" class="headerlink" title="三、使用说明"></a>三、使用说明</h4><p>浏览器访问 <strong>http:&#x2F;&#x2F;服务器IP:9090</strong>，打开 <strong>Cockpit</strong> 的 <strong>Web</strong> 界面，输入用户密码后登录。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230329/Snipaste_2023-03-29_13-38-37.6d0pb3gpjj00.jpg"                      alt="Snipaste_2023-03-29_13-38-37"                ></p><p>登录后首先展示的是系统概览界面，从这里可以快速查看系统的各项信息，如性能使用情况、系统信息、配置等等。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230329/Snipaste_2023-03-29_13-39-03.zodpsk8h7ow.jpg"                      alt="Snipaste_2023-03-29_13-39-03"                ></p><h4 id="虚拟机的使用"><a href="#虚拟机的使用" class="headerlink" title="虚拟机的使用"></a>虚拟机的使用</h4><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230329/Snipaste_2023-03-29_13-39-47.7jo8ywffv1s0.jpg"                      alt="Snipaste_2023-03-29_13-39-47"                ></p><h5 id="1、创建网桥"><a href="#1、创建网桥" class="headerlink" title="1、创建网桥"></a>1、创建网桥</h5><p>以前我们都是手动创建桥，有了cockpit直接在页面点一点就创建好了。</p><p>在网络中点击添加网桥，设置名称br0，选择ens192上网的端口，最后点击确定就创建成功了</p><h5 id="2、修改默认kvm存储池"><a href="#2、修改默认kvm存储池" class="headerlink" title="2、修改默认kvm存储池"></a>2、修改默认kvm存储池</h5><p>注意：kvm存储池默认存放在&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images，也就是说，你所创建的虚拟机会生成在该目录下，建议挂载大磁盘空间，单独存放。</p><p>修改kvm存储池方法有很多种，我这里使用ln软连接来实现，我这里将libvirt整个目录软链存放在&#x2F;data&#x2F;kvm下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/kvm</span><br><span class="line">mv /var/lib/libvirt /data/kvm/</span><br><span class="line">ln -sv /data/kvm/libvirt /var/lib/libvirt</span><br></pre></td></tr></table></figure><h5 id="3、创建镜像目录上传镜像"><a href="#3、创建镜像目录上传镜像" class="headerlink" title="3、创建镜像目录上传镜像"></a>3、创建镜像目录上传镜像</h5><p>我这里单独创建个目录用于存放ISO镜像包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/iso</span><br></pre></td></tr></table></figure><p>我这里上传了一个CentOS-7.9-x86_64-Minimal-2009.iso镜像包</p><h5 id="4、创建虚拟机"><a href="#4、创建虚拟机" class="headerlink" title="4、创建虚拟机"></a>4、创建虚拟机</h5><p>登录web控制台，点击虚拟机，右上角点击Create VM</p><p>接下来就是系统安装的流程了，没什么可讲的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Cockpit-基于Web的Linux管理工具的安装和使用教程&quot;&gt;&lt;a href=&quot;#Cockpit-基于Web的Linux管理工具的安装和使用教程&quot; class=&quot;headerlink&quot; title=&quot;Cockpit - 基于Web的Linux管理工具的安装和使</summary>
      
    
    
    
    <category term="Cockpit安装教程" scheme="http://example.com/categories/Cockpit%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux 服务器管理工具Cockpit" scheme="http://example.com/tags/Linux-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Cockpit/"/>
    
  </entry>
  
  <entry>
    <title>Webmin的安装和卸载</title>
    <link href="http://example.com/2023/03/29/Webmind%E7%9A%84%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD%20/"/>
    <id>http://example.com/2023/03/29/Webmind%E7%9A%84%20%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD%20/</id>
    <published>2023-03-28T16:00:00.000Z</published>
    <updated>2023-03-29T05:58:37.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Webmin的安装和卸载"><a href="#Webmin的安装和卸载" class="headerlink" title="Webmin的安装和卸载"></a>Webmin的安装和卸载</h1><p>在centos里安装webmin<br>选择安装最新版本的安装包<br>官方下载路径可以查看下载版本<a class="link"   href="http://download.webmin.com/download/yum/" >http://download.webmin.com/download/yum/<i class="fas fa-external-link-alt"></i></a></p><p>wget <a class="link"   href="http://download.webmin.com/download/yum/webmin-2.021-1.noarch.rpm" >http://download.webmin.com/download/yum/webmin-2.021-1.noarch.rpm<i class="fas fa-external-link-alt"></i></a></p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>如果你的系统没有Perl，那么安装Webmin之前要满足该依赖项。你可能还要在安装Webmin之前安装Encode :: Detect Perl模块：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-Encode-Detect</span><br><span class="line"></span><br><span class="line">sudo yum -y install openssl perl perl-Net-SSLeay perl-IO-Tty perl-Crypt-SSLeay perl-Encode-Detect autoconf</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh webmin-2.021-1.noarch.rpm </span><br><span class="line">或</span><br><span class="line">rpm -ivh webmin-2.021-1.noarch.rpm --force --nodeps</span><br></pre></td></tr></table></figure><h4 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/webmin/changepass.pl /etc/webmin root test </span><br></pre></td></tr></table></figure><p>webmin的用户名是root，密码为test<br>webmin的配置目录是&#x2F;etc&#x2F;webmin</p><h4 id="如果有安全需要，则更改webmin服务默认端口号"><a href="#如果有安全需要，则更改webmin服务默认端口号" class="headerlink" title="如果有安全需要，则更改webmin服务默认端口号"></a>如果有安全需要，则更改webmin服务默认端口号</h4><p>进入miniserv.conf 配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/webmin/miniserv.conf </span><br></pre></td></tr></table></figure><p>修改默认端口号port&#x3D;10000和listen&#x3D;10000为如下即可（自己随便设置端口号）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port=6666</span><br><span class="line">listen=6666</span><br></pre></td></tr></table></figure><h3 id="webmin服务命令"><a href="#webmin服务命令" class="headerlink" title="webmin服务命令"></a>webmin服务命令</h3><p>配置好密码或者端口号后重启下服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">/etc/webmin/restart</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line">/etc/webmin/start </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止</span></span><br><span class="line">/etc/webmin/stop </span><br></pre></td></tr></table></figure><h4 id="防火墙开放端口号"><a href="#防火墙开放端口号" class="headerlink" title="防火墙开放端口号"></a>防火墙开放端口号</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">防火墙开放10000端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=10000/tcp --permanent </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新防火墙配置</span></span><br><span class="line">firewall-cmd --reload </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看已经开放的端口号</span></span><br><span class="line">firewall-cmd --zone=public --list-ports </span><br></pre></td></tr></table></figure><p>补充关闭不需要开放的端口号，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=10000/tcp --permanent # 补充：防火墙关闭10000端口</span><br></pre></td></tr></table></figure><h3 id="webmin访问登录"><a href="#webmin访问登录" class="headerlink" title="webmin访问登录"></a>webmin访问登录</h3><p>访问http:&#x2F;&#x2F;自己的ip:10000，使用重置后的账号和密码即可登录</p><h3 id="webmin设置中文"><a href="#webmin设置中文" class="headerlink" title="webmin设置中文"></a>webmin设置中文</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230329/Snipaste_2023-03-29_13-43-16.3e7s5lyak8i0.jpg"                      alt="Snipaste_2023-03-29_13-43-16"                ></p><h4 id="安装完成后访问可能遇到的问题"><a href="#安装完成后访问可能遇到的问题" class="headerlink" title="安装完成后访问可能遇到的问题"></a>安装完成后访问可能遇到的问题</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR — DOCUMENT FOLLOWS</span><br><span class="line">This web server is running in SSL mode. Try the URL https://cy-ed02-lvs2:10000/ instead.</span><br></pre></td></tr></table></figure><p>解决办法：修改vim &#x2F;etc&#x2F;webmin&#x2F;miniserv.conf里的ssl &#x3D; 1 为 ssl &#x3D; 0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/webmin/miniserv.conf </span><br><span class="line">ssl = 0</span><br></pre></td></tr></table></figure><h4 id="centos卸载webmin"><a href="#centos卸载webmin" class="headerlink" title="centos卸载webmin"></a>centos卸载webmin</h4><p>在升级webmin服务时可先卸载原来的webmin,防止升级时提示错误</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/webmin/uninstall.sh</span><br></pre></td></tr></table></figure><p>补充：如果还安装了virtualmin可以使用下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">卸载virtualmin的同时会卸载webmin</span></span><br><span class="line">sh install.sh -uninstall </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Webmin的安装和卸载&quot;&gt;&lt;a href=&quot;#Webmin的安装和卸载&quot; class=&quot;headerlink&quot; title=&quot;Webmin的安装和卸载&quot;&gt;&lt;/a&gt;Webmin的安装和卸载&lt;/h1&gt;&lt;p&gt;在centos里安装webmin&lt;br&gt;选择安装最新版本的安</summary>
      
    
    
    
    <category term="webmin安装教程" scheme="http://example.com/categories/webmin%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Linux 服务器管理工具webmin" scheme="http://example.com/tags/Linux-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7webmin/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统修改主机名</title>
    <link href="http://example.com/2023/03/28/CentOS7%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2023/03/28/CentOS7%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2023-03-27T16:00:00.000Z</published>
    <updated>2023-03-27T18:14:59.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CentOS7修改主机名的三种方法"><a href="#CentOS7修改主机名的三种方法" class="headerlink" title="CentOS7修改主机名的三种方法"></a>CentOS7修改主机名的三种方法</h1><p>在CentOS7中，有三种定义的主机名:</p><h4 id="静态的（Static-hostname）"><a href="#静态的（Static-hostname）" class="headerlink" title="静态的（Static hostname）"></a>静态的（Static hostname）</h4><p>“静态”主机名也称为内核主机名，是系统在启动时从&#x2F;etc&#x2F;hostname自动初始化的主机名。</p><h4 id="瞬态的（Tansient-hostname）"><a href="#瞬态的（Tansient-hostname）" class="headerlink" title="瞬态的（Tansient hostname）"></a>瞬态的（Tansient hostname）</h4><p>“瞬态”主机名是在系统运行时临时分配的主机名，例如，通过DHCP或mDNS服务器分配。</p><h4 id="灵活的（Pretty-hostname）"><a href="#灵活的（Pretty-hostname）" class="headerlink" title="灵活的（Pretty hostname）"></a>灵活的（Pretty hostname）</h4><p>“灵活”主机名也有人叫做“别名”主机名。<br>“灵活”主机名则允许使用自由形式（包括特殊&#x2F;空白字符）的主机名，以展示给终端用户（如xh01@f5）。<br>“静态”主机名和“瞬态”主机名都遵从作为互联网域名同样的字符限制规则。</p><p>在CentOS 7中，有个叫<strong>hostnamectl</strong>的命令行工具，它允许你查看或修改与主机名相关的配置。</p><h3 id="查看主机名"><a href="#查看主机名" class="headerlink" title="查看主机名:"></a>查看主机名:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//查看一下当前主机名的情况，查看全部三种主机名</span><br><span class="line">hostnamectl   </span><br><span class="line"></span><br><span class="line">//或者，查看全部三种主机名</span><br><span class="line">hostnamectl status</span><br><span class="line"></span><br><span class="line">//只查看静态、瞬态或灵活主机名，分别使用--static，--transient或--pretty选项</span><br><span class="line">[root@xh00 ~]# hostnamectl --static</span><br><span class="line"></span><br><span class="line">xh00</span><br><span class="line">[root@xh00 ~]# hostnamectl --transient</span><br><span class="line"></span><br><span class="line">xh01</span><br><span class="line">[root@xh00 ~]# hostnamectl --pretty</span><br><span class="line"></span><br><span class="line">//或者，查看到的是瞬态的（Tansient hostname）</span><br><span class="line">hostname</span><br><span class="line"></span><br><span class="line">//或者查看主机名配置文件，查看到的是静态的（Static hostname）</span><br><span class="line">cat /etc/hostname</span><br></pre></td></tr></table></figure><p>查看当前Linux操作系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname -a//查看到的是瞬态的（Tansient hostname）</span><br><span class="line"></span><br><span class="line">cat /etc/redhat-release//查看操作系统环境</span><br></pre></td></tr></table></figure><h3 id="centos7系统永久更改主机名（hostname）的几种方法"><a href="#centos7系统永久更改主机名（hostname）的几种方法" class="headerlink" title="centos7系统永久更改主机名（hostname）的几种方法"></a>centos7系统永久更改主机名（hostname）的几种方法</h3><p>在使用centos7系统vps或服务器时，一般都会有一个主机名（hostname），都是主机开通时系统默认分配的。虽然主机名的用处不是很大，不更改也没啥事，但如果看着不顺眼的话，也是可以更改的。下面简单介绍下centos7永久更改主机名的简单方法。</p><p>首先查看当前的主机名hostname，方法有两种：</p><p>1、打开一个终端，在命令提示符中可以看到主机名，主机名通常位于“@”符号后；</p><p>2、在终端输入hostname指令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>其次，更改主机名需要root权限，这里切到root账户（用sudo也可以），如果已经是root用户就不用切换了。</p><h4 id="1、方法一：使用hostnamectl命令"><a href="#1、方法一：使用hostnamectl命令" class="headerlink" title="1、方法一：使用hostnamectl命令"></a>1、方法一：使用hostnamectl命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我们可以通过命令“hostnamectl set-hostname 主机名”来永久修改主机名。</span><br><span class="line"></span><br><span class="line">[root@centos701 ~]# hostnamectl set-hostname CentOS</span><br><span class="line">[root@centos701 ~]# hostname</span><br></pre></td></tr></table></figure><h4 id="2、方法二：修改主机名文件"><a href="#2、方法二：修改主机名文件" class="headerlink" title="2、方法二：修改主机名文件"></a>2、方法二：修改主机名文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">除了方法一，还可以通过修改主机名文件（/etc/hostname）来永久修改主机名。</span><br><span class="line"></span><br><span class="line">[root@centos701 ~]# gedit /etc/hostname</span><br><span class="line">centos701</span><br><span class="line">~</span><br></pre></td></tr></table></figure><p>最后都要重新启动才能生效</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CentOS7修改主机名的三种方法&quot;&gt;&lt;a href=&quot;#CentOS7修改主机名的三种方法&quot; class=&quot;headerlink&quot; title=&quot;CentOS7修改主机名的三种方法&quot;&gt;&lt;/a&gt;CentOS7修改主机名的三种方法&lt;/h1&gt;&lt;p&gt;在CentOS7中，</summary>
      
    
    
    
    <category term="Linux 修改主机名" scheme="http://example.com/categories/Linux-%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D/"/>
    
    
    <category term="Linux 系统修改主机名" scheme="http://example.com/tags/Linux-%E7%B3%BB%E7%BB%9F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Neofetch终端显示 Linux 系统信息</title>
    <link href="http://example.com/2023/03/28/Neofetch%EF%BC%9A%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%98%BE%E7%A4%BA%20Linux%20%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/"/>
    <id>http://example.com/2023/03/28/Neofetch%EF%BC%9A%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%98%BE%E7%A4%BA%20Linux%20%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</id>
    <published>2023-03-27T16:00:00.000Z</published>
    <updated>2023-03-27T18:15:59.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Neofetch：在终端中显示-Linux-系统信息"><a href="#Neofetch：在终端中显示-Linux-系统信息" class="headerlink" title="Neofetch：在终端中显示 Linux 系统信息"></a>Neofetch：在终端中显示 Linux 系统信息</h1><p>Neofetch 是一个简单但有用的命令行系统信息工具，它用 Bash 编写。它会收集有关系统软硬件的信息，并在终端中显示结果。默认情况下，系统信息将与操作系统的 logo 一起显示。但是，你可以进一步地自定义使用 ascii 图像或其他任何图片。你还可以配置 Neofetch 显示的信息、信息的显示位置和时间。Neofetch 主要用于系统信息的截图。它支持 Linux、BSD、Mac OS X、iOS 和 Windows 操作系统。在这个简短的教程中，让我们看看如何使用 Neofetch 显示 Linux 系统信息。</p><h2 id="安装-Neofetch"><a href="#安装-Neofetch" class="headerlink" title="安装 Neofetch"></a><strong>安装 Neofetch</strong></h2><p>Neofetch 可在大多数 Linux 发行版的默认仓库中找到。</p><p>在 Arch Linux 及其衍生版上，使用这个命令安装它：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S netofetch</span><br></pre></td></tr></table></figure><p>在 Debian（Stretch &#x2F; Sid）上：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install neofetch</span><br></pre></td></tr></table></figure><p>在 Fedora 38 上：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dnf install neofetch</span><br></pre></td></tr></table></figure><p>在 RHEL、CentOS 上：</p><p>启用 EPEL 仓库：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-relase</span><br></pre></td></tr></table></figure><p>获取 neofetch 仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo</span><br></pre></td></tr></table></figure><p>然后，安装 Neofetch：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install neofetch</span><br></pre></td></tr></table></figure><p>在 Ubuntu  版本上：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install neofetch</span><br></pre></td></tr></table></figure><h2 id="使用-Neofetch-显示-Linux-系统信息"><a href="#使用-Neofetch-显示-Linux-系统信息" class="headerlink" title="使用 Neofetch 显示 Linux 系统信息"></a><strong>使用 Neofetch 显示 Linux 系统信息</strong></h2><p>Neofetch 非常简单直接。让我们看一些例子。</p><p>打开终端，然后运行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ neofetch</span><br></pre></td></tr></table></figure><p>正如你在上面的输出中所看到的，Neofetch 显示了我的 Arch Linux 系统的以下详细信息：</p><ul><li>已安装操作系统的名称，</li><li>笔记本型号，</li><li>内核详细信息，</li><li>系统运行时间，</li><li>默认和其他软件包管理器安装的软件数量</li><li>默认 shell，</li><li>屏幕分辨率，</li><li>桌面环境，</li><li>窗口管理器，</li><li>窗口管理器的主题，</li><li>系统主题，</li><li>系统图标，</li><li>默认终端，</li><li>CPU 类型，</li><li>GPU 类型，</li><li>已安装的内存。</li></ul><p>Neofetch 还有很多其他选项。我们会看到其中一些。</p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/69777438" >Neofetch更多设置参考<i class="fas fa-external-link-alt"></i></a></p><h1 id="CentOS-7-安装-neofetch"><a href="#CentOS-7-安装-neofetch" class="headerlink" title="CentOS 7 安装 neofetch"></a>CentOS 7 安装 neofetch</h1><h2 id="1-为什么要安装-neofetch-？"><a href="#1-为什么要安装-neofetch-？" class="headerlink" title="1. 为什么要安装 neofetch ？"></a><strong>1. 为什么要安装 neofetch ？</strong></h2><ul><li><p>查看系统信息，如系统版本、内核版本、CPU、内存等信息</p></li><li><p>便于截图装X，如下</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230328/uTools_1679903410524.3bjv6reob4o.jpg"                      alt="uTools_1679903410524"                ></p></li></ul><h2 id="2-安装第一步，去官网查找信息"><a href="#2-安装第一步，去官网查找信息" class="headerlink" title="2. 安装第一步，去官网查找信息"></a><strong>2. 安装第一步，去官网查找信息</strong></h2><ul><li>官网地址可自行百度&#x2F;谷歌，<a class="link"   href="https://link.zhihu.com/?target=https://github.com/dylanaraps/neofetch/wiki/Installation" >https://github.com/dylanaraps/neofetch/wiki/Installation<i class="fas fa-external-link-alt"></i></a></li><li>上述wiki带有不同系统上的安装指南，本文以 CentOS 为例</li><li>所有操作系统自带软件源内无此软件的，安装步骤大致为：添加软件源、导入密钥、刷新包管理器缓存、使用包管理器安装该软件</li></ul><h2 id="3-基于-CentOS-7-的安装步骤如下"><a href="#3-基于-CentOS-7-的安装步骤如下" class="headerlink" title="3. 基于 CentOS 7 的安装步骤如下"></a><strong>3. 基于 CentOS 7 的安装步骤如下</strong></h2><h3 id="3-1-安装-epel-release"><a href="#3-1-安装-epel-release" class="headerlink" title="3.1. 安装 epel-release"></a><strong>3.1. 安装 epel-release</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br></pre></td></tr></table></figure><h3 id="3-2-添加第三方软件源"><a href="#3-2-添加第三方软件源" class="headerlink" title="3.2. 添加第三方软件源"></a><strong>3.2. 添加第三方软件源</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo</span><br></pre></td></tr></table></figure><h3 id="3-3-使用包管理器安装-neofetch"><a href="#3-3-使用包管理器安装-neofetch" class="headerlink" title="3.3. 使用包管理器安装 neofetch"></a><strong>3.3. 使用包管理器安装 neofetch</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install neofetch</span><br></pre></td></tr></table></figure><h2 id="Rocky-Linux-EL9-or-EL8-安装Neofetch"><a href="#Rocky-Linux-EL9-or-EL8-安装Neofetch" class="headerlink" title="Rocky Linux EL9 or EL8 安装Neofetch"></a>Rocky Linux EL9 or EL8 安装Neofetch</h2><p>1、更新Rocky Linux</p><p>在安装Neofetch之前，更新软件包列表以确保安装的是最新版本是很重要的。要执行此操作，请打开终端并输入以下命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf upgrade --refresh</span><br></pre></td></tr></table></figure><p>2、导入EPEL存储库</p><p>在Rocky Linux上导入Extra Packages for Enterprise Linux（EPEL）存储库非常简单。EPEL存储库提供了默认Rocky Linux存储库中未包含的其他软件包。以下命令将演示如何做到这一点，但请确保为Rocky Linux发行版使用正确的命令。</p><p>为Rocky Linux 9导入EPEL</p><p>首先，启用CRB。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf config-manager --set-enabled crb</span><br></pre></td></tr></table></figure><p>3、接下来，使用以下（dnf）terminal命令安装EPEL。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install \</span><br><span class="line"></span><br><span class="line">https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm \</span><br><span class="line"></span><br><span class="line">https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-9.noarch.rpm</span><br></pre></td></tr></table></figure><p>为Rocky Linux 8导入EPEL</p><p>Rocky Linux 8的命令与9的命令相同，只是Enterprise Linux 8版本的路径不同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install \</span><br><span class="line"></span><br><span class="line">https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm \</span><br><span class="line"></span><br><span class="line">https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-8.noarch.rpm</span><br></pre></td></tr></table></figure><p>4、安装Neofetch</p><p>接下来，我们可以通过输入以下命令来安装Neofetch。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install neofetch -y</span><br></pre></td></tr></table></figure><p>安装后，使用neofetch–version命令验证安装和构建。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neofetch --version</span><br></pre></td></tr></table></figure><p>最后，使用以下命令在终端中测试Neofetch。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230328/neofetch-command-example-on-rocky-linux-9-or-8.6ha7i2j6b300.jpg"                      alt="neofetch-command-example-on-rocky-linux-9-or-8"                ></p><p>5、其他命令和提示</p><p>更新Neofetch</p><p>Neofetch可以使用标准的更新或升级命令从您的终端进行更新。最好的方法是使用一体式命令全面检查系统的升级情况，如果有Neofetch的话，它将包括在内。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf upgrade --refresh</span><br></pre></td></tr></table></figure><p>删除（卸载）Neofetch</p><p>对于不再希望安装Neofetch的用户，请运行以下命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf remove neofetch -</span><br></pre></td></tr></table></figure><p>remove命令还将卸载系统上任何未使用的依赖项。</p><p>我建议继续安装EPEL存储库，RHEL克隆的许多软件包都是直接从中导入的，毫无疑问，这在未来会有所帮助。</p><p>结论</p><p>Neofetch是一个在Rocky Linux上显示系统信息的有用工具。安装、更新和删除Neofetch非常简单，如指南中所示，使用命令行终端可以轻松地在Rocky Linux系统上管理Neofetch。</p><p><a class="link"   href="https://www.linuxcapable.com/how-to-install-neofetch-on-rocky-linux/" >参考文档<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Neofetch：在终端中显示-Linux-系统信息&quot;&gt;&lt;a href=&quot;#Neofetch：在终端中显示-Linux-系统信息&quot; class=&quot;headerlink&quot; title=&quot;Neofetch：在终端中显示 Linux 系统信息&quot;&gt;&lt;/a&gt;Neofetch</summary>
      
    
    
    
    <category term="Linux 系统信息终端显示" scheme="http://example.com/categories/Linux-%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E7%BB%88%E7%AB%AF%E6%98%BE%E7%A4%BA/"/>
    
    
    <category term="Linux 系统信息显示" scheme="http://example.com/tags/Linux-%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>Ubantu远程SSH连接问题</title>
    <link href="http://example.com/2023/03/26/Ubantu%20%E8%BF%9C%E7%A8%8BSSH%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2023/03/26/Ubantu%20%E8%BF%9C%E7%A8%8BSSH%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98/</id>
    <published>2023-03-26T13:57:22.740Z</published>
    <updated>2023-04-05T11:17:18.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Ubantu-远程SSH连接问题"><a href="#Ubantu-远程SSH连接问题" class="headerlink" title="Ubantu 远程SSH连接问题"></a><strong>Ubantu 远程SSH连接问题</strong></h3><p>一、检查是否开启SSH服务</p><p>因为Ubuntu默认是不安装SSH服务的，所以在安装之前可以查看目前系统是否安装，通过以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e |grep ssh</span><br></pre></td></tr></table></figure><p>输出的结果ssh-agent表示ssh-client启动，sshd表示ssh-server启动。我们是需要安装服务端所以应该看是否有sshd，如果没有则说明没有安装。</p><p>二、安装SSH服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-client 客户端</span><br><span class="line">sudo apt-get install openssh-server 服务器</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">apt-get install ssh</span><br></pre></td></tr></table></figure><p>三、启动SSH服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh start</span><br></pre></td></tr></table></figure><p>四、修改SSH配置文件</p><p>可以通过SSH配置文件更改包括端口、是否允许root登录等设置，配置文件位置：</p><p> &#x2F;etc&#x2F;ssh&#x2F;sshd_config</p><p>默认是不允许root远程登录的，可以再配置文件开启。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>找到PermitRootLogin without-password 修改为PermitRootLogin yes （本人遇到过）<br><img                       lazyload                     alt="image"                     data-src="https://gitee.com/lucky0915/pic-bed/raw/master/img/202303262044797.png"                      alt="Snipaste_2023-03-26_20-37-03"                ></p><p>五、重启SSH服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><p>即可通过winscp 、putty使用ROOT权限远程登录。</p><p>启用root用户：sudo passwd root &#x2F;&#x2F;修改密码后就启用了。</p><p>客户端如果是ubuntu的话，则已经安装好ssh client,可以用下面的命令连接远程服务器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Ubantu-远程SSH连接问题&quot;&gt;&lt;a href=&quot;#Ubantu-远程SSH连接问题&quot; class=&quot;headerlink&quot; title=&quot;Ubantu 远程SSH连接问题&quot;&gt;&lt;/a&gt;&lt;strong&gt;Ubantu 远程SSH连接问题&lt;/strong&gt;&lt;/h3&gt;</summary>
      
    
    
    
    <category term="远程SSH连接" scheme="http://example.com/categories/%E8%BF%9C%E7%A8%8BSSH%E8%BF%9E%E6%8E%A5/"/>
    
    
    <category term="Ubantu22.04-LTS" scheme="http://example.com/tags/Ubantu22-04-LTS/"/>
    
  </entry>
  
  <entry>
    <title>WSL设置静态IP</title>
    <link href="http://example.com/2023/03/25/WSL%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/"/>
    <id>http://example.com/2023/03/25/WSL%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/</id>
    <published>2023-03-25T11:58:50.626Z</published>
    <updated>2023-03-25T18:35:54.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WSL设置静态IP"><a href="#WSL设置静态IP" class="headerlink" title="WSL设置静态IP"></a>WSL设置静态IP</h2><p>微软终于更新了 WSL2，允许用户自行指定用于 WSL2 的网卡，因此不再需要任何的脚本等等即可固定 WSL2 地址甚至支持 IPv6 和外部访问。</p><p>注意：此方法需要至少 Windows 11 22H2。</p><h5 id="首先需要从-Microsoft-Store-里面下载最新的-Windows-Subsystem-for-Linux。"><a href="#首先需要从-Microsoft-Store-里面下载最新的-Windows-Subsystem-for-Linux。" class="headerlink" title="首先需要从 Microsoft Store 里面下载最新的 Windows Subsystem for Linux。"></a>首先需要从 Microsoft Store 里面下载最新的 Windows Subsystem for Linux。</h5><p>用不了商店的可以前往这里自己下载 msixbundle 部署安装：<a class="link"   href="https://link.zhihu.com/?target=https://github.com/microsoft/WSL/releases" >https://github.com/microsoft/WSL/releases<i class="fas fa-external-link-alt"></i></a></p><p>装好之后可以运行 <code>wsl --version</code> 确认一下是不是 1.0 以上。</p><p>然后在用户目录 <code>%USERPROFILE%</code> 下面创建一个配置文件 <code>.wslconfig</code>，按照如下配置方法设置网络，例如：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[wsl2]</span></span><br><span class="line"><span class="attr">networkingMode</span>=bridged <span class="comment"># 桥接模式</span></span><br><span class="line"><span class="attr">vmSwitch</span>=WSLBridge <span class="comment"># 你想使用的网卡</span></span><br><span class="line"><span class="attr">ipv6</span>=<span class="literal">true</span> <span class="comment"># 启用 IPv6[wsl2]</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown &amp;&amp; wsl</span><br></pre></td></tr></table></figure><p>重启 WSL2，搞定</p><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --version</span><br><span class="line"><span class="comment"># 版本&gt;1.0即可</span></span><br></pre></td></tr></table></figure><p>如果出错，请<a class="link"   href="https://learn.microsoft.com/zh-cn/windows/wsl/install" >安装最新版本<i class="fas fa-external-link-alt"></i></a></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>.wslconfig<br>用于在 WSL 2 上运行的所有已安装分发版 <strong>全局</strong> 配置设置。</p><p>wsl.conf<br>为 WSL 1 或 WSL 2 上运行的 Linux 发行版配置 每个分发 版的设置。</p><p>这里详细配置介绍请移步 <a class="link"   href="https://learn.microsoft.com/zh-cn/windows/wsl/wsl-config" >高级设置配置<i class="fas fa-external-link-alt"></i></a></p><h2 id="配置WSL2使用外部网络"><a href="#配置WSL2使用外部网络" class="headerlink" title="配置WSL2使用外部网络"></a>配置WSL2使用外部网络</h2><p>使用Hyper-V创建外部网络（其他方式创建也行）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看网络交换机名称</span></span><br><span class="line"><span class="built_in">Get-VMSwitch</span> <span class="literal">-SwitchType</span> External</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/uTools_1679587233100.6blp5g6ezac0.jpg"                      alt="uTools_1679587233100"                ></p><p>配置 .wslconfig<br>存储在目录中 %UserProfile%，或者 PowerShell 中使用 cd ~ 访问主目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line">networkingMode=bridge</span><br><span class="line">vmSwitch=WSL_Bridge</span><br><span class="line">ipv6=true</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">dhcp=<span class="literal">false</span></span></span><br><span class="line">memory=8GB</span><br><span class="line">processors=4</span><br><span class="line">localhostforwarding=true</span><br><span class="line">debugConsole=false</span><br><span class="line">guiApplications=true</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启 WSL2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br><span class="line">wsl</span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><p>​       可以看到eth0的网络是桥接网络了</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/Snipaste_2023-03-25_17-27-51.1o5xgami6rds.jpg"                      alt="Snipaste_2023-03-25_17-27-51"                ></p><p>修改DNS禁止自动生成</p><p>添加 <code>/etc/wsl.conf</code> 加入以下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[boot]</span></span><br><span class="line"><span class="comment"># 启用systemctl命令</span></span><br><span class="line"><span class="attr">systemd</span>=<span class="literal">true</span></span><br><span class="line"><span class="section">[network]</span></span><br><span class="line"><span class="comment"># 取消自动生成resolv.conf文件，这个是关键点</span></span><br><span class="line"><span class="attr">generateResolvConf</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 设置虚拟主机的名称，默认的不好看</span></span><br><span class="line"><span class="comment">#hostname = </span></span><br><span class="line"><span class="section">[user]</span></span><br><span class="line"><span class="comment"># 启动的默认用户，设为root吧，不然以后命令都要加sudo有点麻烦</span></span><br><span class="line"><span class="attr">default</span> = root</span><br></pre></td></tr></table></figure><p>先删除再创建，因为resolv.conf是软链接创建的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /etc/resolv.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameserver 223.5.5.5&quot;</span> &gt; /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS</span></span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 223.5.5.5</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><p>重启WSL2 (wsl –shutdown)</p><p>而且还启用了<code>systemd</code> (systemctl 命令回来了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service</span><br><span class="line"></span><br><span class="line">systemctl restart systemd-networkd</span><br><span class="line">systemctl <span class="built_in">enable</span> systemd-networkd</span><br><span class="line">systemctl restart systemd-resolved.service</span><br><span class="line">systemctl <span class="built_in">enable</span> systemd-resolved.service</span><br></pre></td></tr></table></figure><h2 id="设置特定静态IP-本人设置后ping不通"><a href="#设置特定静态IP-本人设置后ping不通" class="headerlink" title="设置特定静态IP [本人设置后ping不通]"></a>设置特定静态IP [本人设置后ping不通]</h2><p>修改 .wslconfig</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[wsl2]</span></span><br><span class="line"><span class="attr">networkingMode</span>=bridged</span><br><span class="line"><span class="attr">vmSwitch</span>=WSL_external</span><br><span class="line"><span class="attr">dhcp</span>=<span class="literal">false</span> <span class="comment"># 禁止动态分配</span></span><br><span class="line"><span class="attr">ipv6</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>当<code>dhcp=false</code>时会读取 <code>cd /lib/systemd/network/wsl_external.network</code> 的网络配置</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim wsl_external.network 加入以下内容</span><br><span class="line"></span><br><span class="line"><span class="section">[Match]</span></span><br><span class="line"><span class="attr">Name</span>=eth0</span><br><span class="line"><span class="section">[Network]</span></span><br><span class="line"><span class="attr">Description</span>=bridge</span><br><span class="line"><span class="attr">DHCP</span>=<span class="literal">false</span></span><br><span class="line"><span class="attr">Address</span>=<span class="number">192.168</span>.<span class="number">1.10</span>/<span class="number">24</span> <span class="comment"># 自行修改</span></span><br><span class="line"><span class="attr">Gateway</span>=<span class="number">192.168</span>.<span class="number">0.1</span> <span class="comment"># 自行修改</span></span><br></pre></td></tr></table></figure><p>重启WSL2 (wsl –shutdown)<br>你会发现eth0已经有自定义的网络了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a class="link"   href="https://zhuanlan.zhihu.com/p/593263088" >WSL2 网络的最终解决方案 - 知乎 (zhihu.com)<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/60004296" >WSL2远程连接SSH1<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.cnblogs.com/lic0914/p/17003251.html" >WSL使用桥接网络指定IP<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://zhuanlan.zhihu.com/p/600042961" >安装WSL2并下载配置Ubuntu<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WSL设置静态IP&quot;&gt;&lt;a href=&quot;#WSL设置静态IP&quot; class=&quot;headerlink&quot; title=&quot;WSL设置静态IP&quot;&gt;&lt;/a&gt;WSL设置静态IP&lt;/h2&gt;&lt;p&gt;微软终于更新了 WSL2，允许用户自行指定用于 WSL2 的网卡，因此不再需要任何的</summary>
      
    
    
    
    <category term="WSL设置静态IP" scheme="http://example.com/categories/WSL%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/"/>
    
    
    <category term="WSL设置静态IP" scheme="http://example.com/tags/WSL%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP/"/>
    
  </entry>
  
  <entry>
    <title>WSL安装图形界面xfce4</title>
    <link href="http://example.com/2023/03/25/WSL%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83xfce4/"/>
    <id>http://example.com/2023/03/25/WSL%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83xfce4/</id>
    <published>2023-03-25T11:58:50.623Z</published>
    <updated>2023-03-25T18:41:54.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WSL安装图形界面xfce4"><a href="#WSL安装图形界面xfce4" class="headerlink" title="WSL安装图形界面xfce4"></a>WSL安装图形界面xfce4</h1><p>最近想在WSL2里安装一个可视化图形界面，之前装过vcXsrv这种方案，不过最近打不开了，也是尝试了Vnc server 不过容易灰屏，最后在vcXsrv ，Vnc server和 xrdp这3种方案中最终选择了xrdp这种方案，利用Windows的远程连接来连接xfce4桌面</p><h4 id="更新升级软件-可选"><a href="#更新升级软件-可选" class="headerlink" title="更新升级软件 (可选)"></a>更新升级软件 (可选)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h4 id="安装桌面环境xfce4"><a href="#安装桌面环境xfce4" class="headerlink" title="安装桌面环境xfce4"></a>安装桌面环境xfce4</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xfce4 xfce4-goodies</span><br></pre></td></tr></table></figure><p><strong>注: <font color=red>display manager</font>选择 <font color=red>gdm3</font> 或<font color=red> lightdm </font>均可。</strong></p><h4 id="设置系统语言"><a href="#设置系统语言" class="headerlink" title="设置系统语言"></a>设置系统语言</h4><p>默认情况下，Linux是没有中文语言包的。我们需要手动下载语言包并配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装中文字体</span></span><br><span class="line">sudo apt-get install ttf-wqy-zenhei</span><br></pre></td></tr></table></figure><p>之后，我们设置系统的语言：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置系统语言</span></span><br><span class="line">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>方向键找到中文后<font color=red>zh_CN,UTF-8 UTF-8</font>，按空格：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260039799.1ipe817m74ww.jpg"                      alt="202303260039799"                ></p><p>之后再回车确认，然后选择中文：<font color=red>zh_CN,UTF-8 </font></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260039597.d0b7i1sk4a8.jpg"                      alt="202303260039597"                ></p><h4 id="安装远程桌面服务xrdp"><a href="#安装远程桌面服务xrdp" class="headerlink" title="安装远程桌面服务xrdp"></a><strong>安装远程桌面服务</strong>xrdp</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xrdp</span><br></pre></td></tr></table></figure><h4 id="修改配置文件xrdp-ini"><a href="#修改配置文件xrdp-ini" class="headerlink" title="修改配置文件xrdp.ini"></a>修改配置文件xrdp.ini</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制一份备用</span></span><br><span class="line">sudo cp /etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini.bak</span><br></pre></td></tr></table></figure><h4 id="配置端口-3389-改为-3390，避免和windows的端口冲突"><a href="#配置端口-3389-改为-3390，避免和windows的端口冲突" class="headerlink" title="配置端口 3389 改为 3390，避免和windows的端口冲突"></a>配置端口 3389 改为 3390，避免和windows的端口冲突</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &#x27;s/3389/3390/g&#x27; /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure><h4 id="max-bpp-x3D-32-修改为-128（最大位图深度）"><a href="#max-bpp-x3D-32-修改为-128（最大位图深度）" class="headerlink" title="max_bpp&#x3D;32 修改为 128（最大位图深度）"></a>max_bpp&#x3D;32 修改为 128（最大位图深度）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &#x27;s/max_bpp=32/#max_bbp=32\nmax_bpp=128/g&#x27; /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure><h4 id="xserverbpp-x3D-24-修改为-128，取消注释"><a href="#xserverbpp-x3D-24-修改为-128，取消注释" class="headerlink" title="xserverbpp&#x3D;24 修改为 128，取消注释"></a>xserverbpp&#x3D;24 修改为 128，取消注释</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &#x27;s/xservervpp=24/#xservervpp=24\nxserverbpp=128/g&#x27; /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure><h4 id="新增配置文件-xsession"><a href="#新增配置文件-xsession" class="headerlink" title="新增配置文件.xsession"></a>新增配置文件.xsession</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">告诉系统: 开启桌面环境的时候用xfce4-session</span></span><br><span class="line">sudo echo xfce4-session &gt; ~/.xsession</span><br></pre></td></tr></table></figure><h4 id="配置sesman-ini"><a href="#配置sesman-ini" class="headerlink" title="配置sesman.ini"></a>配置sesman.ini</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/xrdp/sesman.ini</span><br></pre></td></tr></table></figure><p>将 <strong><font color=red>KillDisconnected</font></strong> 的值修改为 **<font color=red>true</font>**保存退出</p><h4 id="修改配置startwm-sh"><a href="#修改配置startwm-sh" class="headerlink" title="修改配置startwm.sh"></a>修改配置startwm.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/xrdp/startwm.sh</span><br></pre></td></tr></table></figure><p><strong>注释掉末尾亮行，并添加一行 <font color=red>startxfce4</font></strong> </p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260040932.6swz4mq9ick0.jpg"                      alt="202303260040932"                ></p><h4 id="启用-xrdp-服务"><a href="#启用-xrdp-服务" class="headerlink" title="启用 xrdp 服务"></a>启用 xrdp 服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/xrdp start</span><br></pre></td></tr></table></figure><h3 id="远程桌面链接"><a href="#远程桌面链接" class="headerlink" title="远程桌面链接"></a>远程桌面链接</h3><p>按下 <strong>Windows+R</strong> 键，输入 <strong>mstsc</strong> 打开远程桌面连接</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260040033.5dw48sun3ts.jpg"                      alt="202303260040033"                ></p><p>IP为本机即 localhost，端口为配置的<strong>3390</strong>，IP 也可以使用 ip a 或 ifconfig命令查到的 eth0 inet 地址</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260040872.50b5o6ruz8s0.jpg"                      alt="202303260040872"                ></p><p>连接后进入登录页面，用户名和密码填写 WSL 的用户名和密码。注：不要使用 <strong>root</strong>用户登录</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260040129.2k694if582u0.jpg"                      alt="202303260040129"                ></p><p>登录成功进入xfce4桌面</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260041097.701kmlgg8yo0.jpg"                      alt="202303260041097"                ></p><h4 id="停止-xrdp-服务"><a href="#停止-xrdp-服务" class="headerlink" title="停止 xrdp 服务"></a>停止 xrdp 服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/xrdp stop</span><br></pre></td></tr></table></figure><p>不使用时执行停止命令就行</p><h4 id="卸载-xrdp-服务"><a href="#卸载-xrdp-服务" class="headerlink" title="卸载 xrdp 服务"></a>卸载 xrdp 服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge xrdp</span><br></pre></td></tr></table></figure><p><strong><a class="link"   href="https://blog.csdn.net/w47_csdn/article/details/129107705" >参考 Xrdp 方式连接<i class="fas fa-external-link-alt"></i></a></strong></p><p><strong><a class="link"   href="https://www.mintimate.cn/2021/05/15/installVNC/#%F0%9F%98%8B%E5%88%9D%E5%A7%8B%E5%8C%96tightvncserver" >参考VNC server方式连接<i class="fas fa-external-link-alt"></i></a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WSL安装图形界面xfce4&quot;&gt;&lt;a href=&quot;#WSL安装图形界面xfce4&quot; class=&quot;headerlink&quot; title=&quot;WSL安装图形界面xfce4&quot;&gt;&lt;/a&gt;WSL安装图形界面xfce4&lt;/h1&gt;&lt;p&gt;最近想在WSL2里安装一个可视化图形界面，之</summary>
      
    
    
    
    <category term="WSL图形界面xfce4" scheme="http://example.com/categories/WSL%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2xfce4/"/>
    
    
    <category term="WSL图形界面xfce4" scheme="http://example.com/tags/WSL%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2xfce4/"/>
    
  </entry>
  
  <entry>
    <title>Docker 搭建私服仓库</title>
    <link href="http://example.com/2023/03/25/Docker-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%8D%E4%BB%93%E5%BA%93/"/>
    <id>http://example.com/2023/03/25/Docker-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%8D%E4%BB%93%E5%BA%93/</id>
    <published>2023-03-25T11:57:27.091Z</published>
    <updated>2023-03-25T18:29:55.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-搭建私服仓库"><a href="#Docker-搭建私服仓库" class="headerlink" title="Docker 搭建私服仓库"></a>Docker 搭建私服仓库</h1><p>最近想搭建一个属于自己的私服仓库，目前人们普遍使用的有GitLab、Gogs、Gitea、Gitblit 这几个比较常用，GitLab主要公司用的比较多，功能也比较全面，但是比较占用内存，我安装完又给卸载了，如果你内存比较大使用也挺好，Gogs是基于Go语言开发的，跨平台性也挺好，Windows、Linux、Mac端也都有，比较轻量级，安装包也比较小，占用内存最少，Gitea和Gogs之前是一个团队，因为意向不同分开了，也是基于Gogs的分支开发的，界面有些类似但是功能目前比Gogs多，个人觉得还是比较好用的，Gitblit 之前我也使用过不过当时是在Windows端安装的，Gitblit是基于Java语言开发的，跨平台性也比较好，各个平台也都有，用着还不错不过和这几个对比一下，总觉的图形界面不够美观，目前感觉使用的人不是太多了，对比而言个人使用的话还是比较推荐Gogs和Gitea，我目前会使用Gitea，相对于Gogs的内存占用也不是太多，功能还比较全面！</p><h3 id="1-安装gogs"><a href="#1-安装gogs" class="headerlink" title="1.安装gogs"></a>1.安装gogs</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要创建 gogs 数据库</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取镜像</span></span><br><span class="line">docker pull gogs/gogs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建映射文件目录</span></span><br><span class="line">mkdir -p /var/gogs</span><br><span class="line"></span><br><span class="line">docker run --name=gogs --restart always -p 122:22 -p 3000:3000 -v /var/gogs:/data gogs/gogs</span><br><span class="line"></span><br><span class="line">docker start gogs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">踩坑记录 切记http 要填写3000端口 不要更改，不然无法访问</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/4fc497e048ae4888adf4d0c0caf55821.65q01cj2ayg0.webp"                      alt="4fc497e048ae4888adf4d0c0caf55821"                ></p><h3 id="2-安装gitea"><a href="#2-安装gitea" class="headerlink" title="2.安装gitea"></a>2.安装gitea</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要创建 gitea 数据库</span> </span><br><span class="line">docker pull gitea/gitea</span><br><span class="line"></span><br><span class="line">mkdir -p /var/gitea</span><br><span class="line"></span><br><span class="line">docker run -d --name=gitea --restart always -p 121:22 -p 3000:3000 -v /var/gitea:/data gitea/gitea</span><br><span class="line"></span><br><span class="line">docker start gitea</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">踩坑记录 切记http 要填写3000端口 不要更改，不然无法访问</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260026608.4e4pnz1nj860.webp"                      alt="202303260026608"                ></p><h3 id="3-安装gitblit"><a href="#3-安装gitblit" class="headerlink" title="3.安装gitblit"></a>3.安装gitblit</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitblit/gitblit:rpc</span><br><span class="line"></span><br><span class="line">mkdir -p /var/gitblit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https访问</span></span><br><span class="line">docker run -d --name gitblit -p 8443:8443 -p 29418:29418 -v /var/gitblit:/data gitblit/gitblit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https和http访问</span></span><br><span class="line">docker run -d --name gitblit --restart always -p 8180:8080 -p 8443:8443 -p 9418:9418 -p 29418:29418 -v /var/gitblit:/data gitblit/gitblit</span><br><span class="line"></span><br><span class="line">docker start gitblit</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260102544.13qayufmyzsw.webp"                      alt="202303260102544"                ></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line">docker run --name mysql5.7 -p 13306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-搭建私服仓库&quot;&gt;&lt;a href=&quot;#Docker-搭建私服仓库&quot; class=&quot;headerlink&quot; title=&quot;Docker 搭建私服仓库&quot;&gt;&lt;/a&gt;Docker 搭建私服仓库&lt;/h1&gt;&lt;p&gt;最近想搭建一个属于自己的私服仓库，目前人们普遍使用的</summary>
      
    
    
    
    <category term="Gogs Gitea Gitblit" scheme="http://example.com/categories/Gogs-Gitea-Gitblit/"/>
    
    
    <category term="Gogs Gitea Gitblit 部署" scheme="http://example.com/tags/Gogs-Gitea-Gitblit-%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>gitlab 域名与克隆地址</title>
    <link href="http://example.com/2023/03/22/GitLab%20%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%85%8B%E9%9A%86%E5%9C%B0%E5%9D%80%E4%B8%8D%E4%B8%80%E8%87%B4%E4%BF%AE%E6%94%B9/"/>
    <id>http://example.com/2023/03/22/GitLab%20%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%85%8B%E9%9A%86%E5%9C%B0%E5%9D%80%E4%B8%8D%E4%B8%80%E8%87%B4%E4%BF%AE%E6%94%B9/</id>
    <published>2023-03-22T03:09:28.783Z</published>
    <updated>2023-03-22T03:07:19.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gitlab-域名与克隆地址不一致修改"><a href="#gitlab-域名与克隆地址不一致修改" class="headerlink" title="gitlab 域名与克隆地址不一致修改"></a>gitlab 域名与克隆地址不一致修改</h2><h4 id="1-gitlab替换https"><a href="#1-gitlab替换https" class="headerlink" title="1.gitlab替换https"></a>1.gitlab替换https</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置gitlab替换https://域名 ,如：&#x27;https://xxx.com&#x27;</span></span><br><span class="line">vim /etc/gitlab/gitlab.rb   </span><br><span class="line"><span class="comment">#打开配置文件</span></span><br><span class="line">external_url <span class="string">&#x27;external_url &#x27;</span>https://192.168.1.12:8089<span class="string">&#x27;  # 注：一定要HTTPS</span></span><br></pre></td></tr></table></figure><h4 id="2-添加ssl-证书"><a href="#2-添加ssl-证书" class="headerlink" title="2.添加ssl 证书"></a>2.添加ssl 证书</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个ssl文件 把申请的证书放在这个文件夹里</span></span><br><span class="line"><span class="built_in">mkdir</span> /etc/gitlab/ssl  </span><br><span class="line"><span class="comment">#打开配置文件</span></span><br><span class="line">vim  /etc/gitlab/gitlab.rb  </span><br><span class="line"><span class="comment">#取消注释改为 true</span></span><br><span class="line">nginx[<span class="string">&#x27;redirect_http_to_https&#x27;</span>]= <span class="literal">true</span></span><br><span class="line"><span class="comment">#放置对应的证书名称</span></span><br><span class="line">nginx[<span class="string">&#x27;ssl_certificate&#x27;</span>] = <span class="string">&quot;/etc/gitlab/ssl/xxxx.crt&quot;</span>  </span><br><span class="line"><span class="comment">#放置对应的证书名称</span></span><br><span class="line">nginx[<span class="string">&#x27;ssl_certificate_key&#x27;</span>] = <span class="string">&quot;/etc/gitlab/ssl/xxxx.key&quot;</span> </span><br><span class="line"><span class="comment">#使配置生效</span></span><br><span class="line">gitlab-ctl reconfigure </span><br></pre></td></tr></table></figure><h4 id="3-修改clone-地址"><a href="#3-修改clone-地址" class="headerlink" title="3.修改clone 地址"></a>3.修改clone 地址</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /var/opt/gitlab/gitlab-rails/etc/gitlab.yml  <span class="comment">#打开配置文件，参考图修改后重启</span></span><br><span class="line">gitlab-ctl restart  <span class="comment"># 重起生效 # </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;gitlab-域名与克隆地址不一致修改&quot;&gt;&lt;a href=&quot;#gitlab-域名与克隆地址不一致修改&quot; class=&quot;headerlink&quot; title=&quot;gitlab 域名与克隆地址不一致修改&quot;&gt;&lt;/a&gt;gitlab 域名与克隆地址不一致修改&lt;/h2&gt;&lt;h4 i</summary>
      
    
    
    
    <category term="SSL认证" scheme="http://example.com/categories/SSL%E8%AE%A4%E8%AF%81/"/>
    
    
    <category term="SSL认证" scheme="http://example.com/tags/SSL%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>Linux 配置 JDK Maven 环境变量</title>
    <link href="http://example.com/2023/03/22/%E9%85%8D%E7%BD%AEMaven%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://example.com/2023/03/22/%E9%85%8D%E7%BD%AEMaven%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</id>
    <published>2023-03-21T19:13:04.673Z</published>
    <updated>2023-03-21T19:14:14.378Z</updated>
    
    <content type="html"><![CDATA[<p>使用命令 <strong>java</strong> 、<strong>javac</strong> 、 <strong>java -version</strong> 来查看是否安装了JDK</p><p>rpm -qa | grep java 或 rpm -qa | grep jdk <strong>命令来查询出系统自带的jdk（蓝框的四个就是系统自带的）注：其余的不要删</strong></p><p>然后通过    rpm -e –nodeps   后面跟系统自带的jdk名    这个命令来删除系统自带的jdk，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载 CentOS 7.9 自带JDK</span></span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.262.b10-1.el7.x86_64</span><br><span class="line"></span><br><span class="line">rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br><span class="line"></span><br><span class="line">rpm -e --nodeps java-1.8.0-openjdk-1.8.0.262.b10-1.el7.x86_64</span><br><span class="line"></span><br><span class="line">rpm -e --nodeps java-1.7.0-openjdk-1.7.0.261-2.6.22.2.el7_8.x86_64</span><br></pre></td></tr></table></figure><h4 id="配置Java环境变量"><a href="#配置Java环境变量" class="headerlink" title="配置Java环境变量"></a>配置Java环境变量</h4><p>解压下载好的JDK安装包<br>解压路径：&#x2F;usr&#x2F;local&#x2F;java&#x2F;</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置Java环境变量</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java/jdk1.8.0_221</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_PATH&#125;</span></span><br></pre></td></tr></table></figure><h4 id="配置Maven环境变量"><a href="#配置Maven环境变量" class="headerlink" title="配置Maven环境变量"></a>配置Maven环境变量</h4><p>解压下载好的maven安装包<br>解压路径：&#x2F;usr&#x2F;local&#x2F;maven&#x2F;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置Maven环境变量</span></span><br><span class="line"></span><br><span class="line">export MAVEN_HOME=/usr/local/maven/apache-maven-3.9.0</span><br><span class="line">export PATH=$&#123;MAVEN_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><h4 id="Linux：-解决每次重启机器环境变量都需要-source-x2F-etc-x2F-profile-才生效"><a href="#Linux：-解决每次重启机器环境变量都需要-source-x2F-etc-x2F-profile-才生效" class="headerlink" title="Linux： 解决每次重启机器环境变量都需要 source &#x2F;etc&#x2F;profile 才生效"></a>Linux： 解决每次重启机器环境变量都需要 source &#x2F;etc&#x2F;profile 才生效</h4><ul><li><a class="link"   href="https://blog.csdn.net/qq_41538097/article/details/107110230#1bashrc_6" >1、将环境变量配置在~&#x2F;.bashrc里面。<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/qq_41538097/article/details/107110230#2bashrcsource_etcprofile_24" >2、在~&#x2F;.bashrc里面加一句source &#x2F;etc&#x2F;profile<i class="fas fa-external-link-alt"></i></a></li></ul><p>.bashrc 文件说明：bash 在每次启动时都会自动载入 bashrc 配置文件中的内容，.bashrc 文件可以执行一些命令以及脚本，有以下两种解决方法解决每次重启机器环境变量都需要 source &#x2F;etc&#x2F;profile 才生效</p><h5 id="1、将环境变量配置在-x2F-bashrc里面。"><a href="#1、将环境变量配置在-x2F-bashrc里面。" class="headerlink" title="1、将环境变量配置在~&#x2F;.bashrc里面。"></a>1、将环境变量配置在~&#x2F;.bashrc里面。</h5><p>~代表当前用户目录，我是root用户登录的，如可以使用如下命令进入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /root/.bashrc</span><br><span class="line">或</span><br><span class="line">vi ~/.bashrc</span><br></pre></td></tr></table></figure><h5 id="2-添加环境变量"><a href="#2-添加环境变量" class="headerlink" title="2.添加环境变量"></a>2.添加环境变量</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置Java环境变量</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java/jdk1.8.0_221</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;JRE_HOME&#125;</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$&#123;JAVA_PATH&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用命令 &lt;strong&gt;java&lt;/strong&gt; 、&lt;strong&gt;javac&lt;/strong&gt; 、 &lt;strong&gt;java -version&lt;/strong&gt; 来查看是否安装了JDK&lt;/p&gt;
&lt;p&gt;rpm -qa | grep java 或 rpm -qa | gr</summary>
      
    
    
    
    <category term="JDK Maven 环境变量" scheme="http://example.com/categories/JDK-Maven-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
    
    <category term="JDK Maven 环境变量" scheme="http://example.com/tags/JDK-Maven-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>安装Jenkins 的方式</title>
    <link href="http://example.com/2023/03/22/%E5%AE%89%E8%A3%85Jenkins-%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2023/03/22/%E5%AE%89%E8%A3%85Jenkins-%E7%9A%84%E6%96%B9%E5%BC%8F/</id>
    <published>2023-03-21T19:13:04.671Z</published>
    <updated>2023-03-25T18:55:13.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Jenkins-的方式"><a href="#安装Jenkins-的方式" class="headerlink" title="安装Jenkins 的方式"></a>安装Jenkins 的方式</h1><p>Jenkins 是一个可扩展的持续集成（CI）平台。它只是一个平台，真正运作的都是插件。<br>Jenkins的主要作用：持续的监控软件版本发布&#x2F;测试项目。<br>监控外部定时调用执行的工作。</p><p><strong>接下来记录一下所踩得的坑 !</strong></p><h3 id="1-Docker安装"><a href="#1-Docker安装" class="headerlink" title="1.Docker安装"></a>1.Docker安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建Linux本地目录并赋权</span></span><br><span class="line"></span><br><span class="line">mkdir -p /var/jenkins_data</span><br><span class="line">chmod 777 /var/jenkins_data</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取镜像 目前  对应 jenkins 官方 2.332.3</span></span><br><span class="line"></span><br><span class="line">docker pull jenkinsci/blueocean:1.25.3   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对应 jenkins 官方 2.346.1 LTS 支持JDK8-11-17</span> </span><br><span class="line"></span><br><span class="line">docker pull jenkinsci/blueocean:1.25.5   </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一定要挂载Maven和JDK8 自带JDK11也可以用</span></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">  -u root \</span><br><span class="line">  -d \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 8090:8080 \</span><br><span class="line">  -p 8091:50000 \</span><br><span class="line">  -v /var/jenkins_data:/var/jenkins_home \</span><br><span class="line">  -v /usr/local/java/jdk1.8.0_221:/usr/local/java/jdk1.8.0_221 \</span><br><span class="line">  -v /usr/local/maven/apache-maven-3.9.0:/usr/local/maven/apache-maven-3.9.0 \</span><br><span class="line">   jenkinsci/blueocean:1.25.5</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260100237.1ln1ov5u5ygw.jpg"                      alt="202303260100237"                ></p><h3 id="Docker安装第一次需要进入容器才能获取密码"><a href="#Docker安装第一次需要进入容器才能获取密码" class="headerlink" title="Docker安装第一次需要进入容器才能获取密码"></a>Docker安装第一次需要进入容器才能获取密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260100692.7l264u4ylho0.jpg"                      alt="202303260100692"                ></p><h3 id="接下来登录安装插件"><a href="#接下来登录安装插件" class="headerlink" title="接下来登录安装插件!"></a>接下来登录安装插件!</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260100519.174eefsn5u4g.jpg"                      alt="202303260100519"                ></p><h3 id="插件安装完注册账号重启登录"><a href="#插件安装完注册账号重启登录" class="headerlink" title="插件安装完注册账号重启登录"></a>插件安装完注册账号重启登录</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260100147.5keh2gw2c9s0.jpg"                      alt="202303260100147"                ></p><h3 id="修改为国内的清华大学官方镜像地址，最终内容如下："><a href="#修改为国内的清华大学官方镜像地址，最终内容如下：" class="headerlink" title="修改为国内的清华大学官方镜像地址，最终内容如下："></a>修改为国内的清华大学官方镜像地址，最终内容如下：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">找到这个配置文件hudson.model.UpdateCenter.xml</span></span><br><span class="line"></span><br><span class="line">   &lt;?xml version=&#x27;1.1&#x27; encoding=&#x27;UTF-8&#x27;?&gt;</span><br><span class="line">&lt;sites&gt;</span><br><span class="line">  &lt;site&gt;</span><br><span class="line">    &lt;id&gt;default&lt;/id&gt;</span><br><span class="line">    &lt;!--清华镜像--&gt;</span><br><span class="line">    &lt;url&gt;https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json&lt;/url&gt;</span><br><span class="line">    &lt;!--官方镜像</span><br><span class="line">    &lt;url&gt;https://updates.jenkins.io/update-center.json&lt;/url&gt;--&gt;</span><br><span class="line">  &lt;/site&gt;</span><br><span class="line">&lt;/sites&gt;</span><br></pre></td></tr></table></figure><h3 id="插件管理高级里更改URL地址"><a href="#插件管理高级里更改URL地址" class="headerlink" title="插件管理高级里更改URL地址"></a>插件管理高级里更改URL地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260101482.2w22v4uztoy0.jpg"                      alt="202303260101482"                ></p><h3 id="配置Maven-Setting-xml路径-Docker安装最好挂载本地Maven"><a href="#配置Maven-Setting-xml路径-Docker安装最好挂载本地Maven" class="headerlink" title="配置Maven Setting.xml路径 Docker安装最好挂载本地Maven"></a>配置Maven Setting.xml路径 Docker安装最好挂载本地Maven</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置文件目录  获取JDK目录</span></span><br><span class="line"></span><br><span class="line">  echo $JAVA_HOME </span><br><span class="line">  /opt/java/openjdk</span><br><span class="line">  /usr/local/java/jdk1.8.0_221</span><br><span class="line">  /usr/local/maven/apache-maven-3.9.0</span><br><span class="line">  /usr/local/maven/apache-maven-3.9.0/conf/settings.xml</span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260101807.6dsymz4ilbc0.jpg"                      alt="202303260101807"                ></p><h3 id="配置JDK-容器里自带JDK，也可挂载本地JDK-8"><a href="#配置JDK-容器里自带JDK，也可挂载本地JDK-8" class="headerlink" title="配置JDK 容器里自带JDK，也可挂载本地JDK 8"></a>配置JDK 容器里自带JDK，也可挂载本地JDK 8</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260101281.6s72vdeqgb40.jpg"                      alt="202303260101281"                ></p><h3 id="配置Maven本地安装路径"><a href="#配置Maven本地安装路径" class="headerlink" title="配置Maven本地安装路径"></a>配置Maven本地安装路径</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260101138.5hjkup5xcfk0.jpg"                      alt="202303260101138"                ></p><h3 id="最后测试一下构建项目"><a href="#最后测试一下构建项目" class="headerlink" title="最后测试一下构建项目"></a>最后测试一下构建项目</h3><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/5ober/chart-bed@main/20230326/202303260101792.yqeskaz3fzk.jpg"                      alt="202303260101792"                ></p><h3 id="2-war包安装方式"><a href="#2-war包安装方式" class="headerlink" title="2.war包安装方式"></a>2.war包安装方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载jenkins.war包 安装目录 Java-jar启动</span></span><br><span class="line"></span><br><span class="line">java -jar jenkins.war --httpPort=8081</span><br></pre></td></tr></table></figure><h3 id="3-安装版jenkins看链接"><a href="#3-安装版jenkins看链接" class="headerlink" title="3.安装版jenkins看链接"></a>3.安装版jenkins看链接</h3><p><a class="link"   href="https://developer.aliyun.com/article/885497" >安装版Jenkins教程<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装Jenkins-的方式&quot;&gt;&lt;a href=&quot;#安装Jenkins-的方式&quot; class=&quot;headerlink&quot; title=&quot;安装Jenkins 的方式&quot;&gt;&lt;/a&gt;安装Jenkins 的方式&lt;/h1&gt;&lt;p&gt;Jenkins 是一个可扩展的持续集成（CI）平台。</summary>
      
    
    
    
    <category term="Jenkins 自动化部署" scheme="http://example.com/categories/Jenkins-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="Jenkins部署" scheme="http://example.com/tags/Jenkins%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>宝塔安装的redis开启远程连接</title>
    <link href="http://example.com/2023/03/19/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E7%9A%84redis%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    <id>http://example.com/2023/03/19/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E7%9A%84redis%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</id>
    <published>2023-03-19T08:39:43.081Z</published>
    <updated>2023-03-19T07:58:20.015Z</updated>
    
    <content type="html"><![CDATA[<h3 id="宝塔安装的Redis开启远程连接"><a href="#宝塔安装的Redis开启远程连接" class="headerlink" title="宝塔安装的Redis开启远程连接"></a>宝塔安装的Redis开启远程连接</h3><p>第一步，打开配置文件&#x2F;www&#x2F;server&#x2F;redis&#x2F;redis.conf</p><p>搜索bind，修改自己的IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind 192.168.1.16</span><br></pre></td></tr></table></figure><p>搜索protected-mode，将保护模式yes改成no</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected-mode no</span><br></pre></td></tr></table></figure><p>将 requirepass foobared 的 foobared 改为自己需要设置的Redis密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass sober</span><br></pre></td></tr></table></figure><p>最后重启配置</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;宝塔安装的Redis开启远程连接&quot;&gt;&lt;a href=&quot;#宝塔安装的Redis开启远程连接&quot; class=&quot;headerlink&quot; title=&quot;宝塔安装的Redis开启远程连接&quot;&gt;&lt;/a&gt;宝塔安装的Redis开启远程连接&lt;/h3&gt;&lt;p&gt;第一步，打开配置文件&amp;#x2</summary>
      
    
    
    
    <category term="Redis" scheme="http://example.com/categories/Redis/"/>
    
    
    <category term="Redis开启远程连接" scheme="http://example.com/tags/Redis%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
</feed>
